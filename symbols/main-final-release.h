/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'swars_final_main_disass'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

struct TbSprite;
struct ScreenButton;
struct ScreenInfoBox;
struct TbSerialDev;
struct SingleFloorTexture;
struct HeapMgrHandle;
struct TrPoint;
struct TrTriangle;
struct __iobuf;
struct SNDSAMPLE;
struct SmackSndTrk;

/* 1 */
#pragma pack(push, 1)
struct type_info
{
  void *vftable;
  int _m_data;
  char _m_d_name[];
};
#pragma pack(pop)

/* 2 */
#pragma pack(push, 1)
struct PMD
{
  int mdisp;
  int pdisp;
  int vdisp;
};
#pragma pack(pop)

/* 3 */
#pragma pack(push, 1)
struct RTTIBaseClassDescriptor
{
  void *pTypeDescriptor;
  int numContainedBases;
  PMD pmd;
  int attributes;
};
#pragma pack(pop)

/* 4 */
#pragma pack(push, 1)
struct RTTIClassHierarchyDescriptor
{
  int signature;
  int attributes;
  int numBaseClasses;
  void *pBaseClassArray;
};
#pragma pack(pop)

/* 5 */
#pragma pack(push, 1)
struct RTTICompleteObjectLocator
{
  int signature;
  int offset;
  int cdOffset;
  void *pTypeDescriptor;
  void *pClassDescriptor;
};
#pragma pack(pop)

/* 6 */
#pragma pack(push, 1)
struct RTCI
{
  void *m_lpszClassName;
  int m_nObjectSize;
  int m_wSchema;
  void *m_pfnCreateObject;
  void *m_pfnGetBaseClass;
  int m_pNextClass;
  int m_pClassInit;
};
#pragma pack(pop)

/* 7 */
#pragma pack(push, 1)
struct UnknSpr1
{
  char field_0[1158];
  int field_486;
  char field_48A;
  char field_48B;
};
#pragma pack(pop)

/* 145 */
struct DITrig
{
  unsigned int *vlcbuf[2];
  int vlcid;
  unsigned __int16 *imgbuf;
};

/* 146 */
struct __attribute__((packed)) __attribute__((aligned(1))) DITriangle
{
  __int16 X1;
  __int16 Y1;
  __int16 X2;
  __int16 Y2;
  __int16 X3;
  __int16 Y3;
  char Colour;
};

/* 147 */
struct __attribute__((packed)) __attribute__((aligned(1))) DIBox
{
  __int16 X;
  __int16 Y;
  __int16 Width;
  __int16 Height;
  unsigned __int8 Colour;
};

/* 148 */
struct __attribute__((packed)) __attribute__((aligned(1))) DILine
{
  __int16 X1;
  __int16 Y1;
  __int16 X2;
  __int16 Y2;
  unsigned __int8 Colour;
};

/* 149 */
#pragma pack(push, 1)
struct __attribute__((packed)) __attribute__((aligned(1))) DISprite
{
  __int16 X;
  __int16 Y;
  struct TbSprite *Sprite;
  unsigned __int8 Colour;
};
#pragma pack(pop)

/* 150 */
struct __attribute__((packed)) __attribute__((aligned(1))) DIText
{
  __int16 WindowX;
  __int16 WindowY;
  __int16 Width;
  __int16 Height;
  __int16 X;
  __int16 Y;
  char *Text;
  struct Sprite *Font;
  unsigned __int16 Line;
  unsigned __int8 Colour;
};

/* 151 */
struct __attribute__((packed)) __attribute__((aligned(1))) DIFlic
{
  void (__fastcall __spoils<eax> *Function)();
  int field_4;
  char Colour;
};

/* 152 */
struct DIHotspot
{
  __int16 X;
  __int16 Y;
};

/* 144 */
union __attribute__((packed)) __attribute__((aligned(1))) PurpleDrawItemUnion
{
  DITrig Trig;
  struct DITriangle Triangle;
  struct DIBox Box;
  struct DILine Line;
  struct DISprite Sprite;
  struct DIText Text;
  DIFlic Flic;
  struct DIHotspot Hotspot;
};

/* 8 */
#pragma pack(push, 1)
struct PurpleDrawItem
{
  union PurpleDrawItemUnion U;
  unsigned __int8 Type;
  unsigned __int16 Flags;
};
#pragma pack(pop)

/* 33 */
struct __attribute__((packed)) __attribute__((aligned(2))) TbSprite
{
  unsigned __int8 *Data;
  unsigned __int8 SWidth;
  unsigned __int8 SHeight;
};

/* 9 */
struct ComHandlerInfo
{
  struct TbSerialDev *serdev;
  __int16 field_4;
  __int16 field_6;
  __int16 field_8;
  __int16 field_A[4];
  __attribute__((packed)) __attribute__((aligned(1))) int field_12;
  __int16 field_16;
  __int16 field_18;
  __int16 field_1A;
};

/* 80 */
#pragma pack(push, 1)
struct __attribute__((packed)) __attribute__((aligned(1))) TbSerialDev
{
  char field_0[2198];
  char inbuf[2048];
  __int16 field_1096;
  __int16 field_1098;
  __int16 field_109A;
  unsigned __int16 inbuf_pos;
  __int16 field_109E;
  __int16 field_10A0;
  __int16 field_10A2;
  int baudrate;
  unsigned __int8 comdev_id;
  char field_10A9;
  char field_10AA;
  char field_10AB;
  char num_players;
  char field_10AD[31];
  char field_10CC;
};
#pragma pack(pop)

/* 10 */
#pragma pack(push, 1)
struct ModemResponse
{
  char msg[40];
  int code;
};
#pragma pack(pop)

/* 11 */
#pragma pack(push, 1)
struct ModemCommand
{
  char cmd[80];
};
#pragma pack(pop)

/* 12 */
#pragma pack(push, 1)
struct TbLoadFiles
{
  char FName[28];
  void *Start;
  void *SEnd;
  int SLength;
  unsigned __int16 Flags;
  __int16 Spare;
};
#pragma pack(pop)

/* 13 */
#pragma pack(push, 1)
struct BreakoutLevel
{
  char *level;
  char field_4[120];
};
#pragma pack(pop)

/* 14 */
#pragma pack(push, 1)
struct TbScreenModeInfo
{
  __int16 Width;
  __int16 Height;
  __int16 BitsPerPixel;
  int Available;
  int VideoMode;
  char Desc[24];
};
#pragma pack(pop)

/* 15 */
#pragma pack(push, 1)
struct UnknStruct01
{
  int field_0;
  int field_4;
  int field_8;
  int field_C;
  int field_10;
  int field_14;
  int field_18;
  int field_1C;
  __int16 field_20;
  __int16 field_22;
  __int16 field_24;
  __int16 field_26;
  __int16 field_28[63];
  __int16 field_A6;
};
#pragma pack(pop)

/* 16 */
struct __attribute__((packed)) __attribute__((aligned(1))) MemSystem
{
  const char *Name;
  void *BufferPtr;
  unsigned __int16 ESize;
  int N;
  int dum1;
  int dum2;
  char dum3;
};

/* 17 */
struct QuickLight
{
  unsigned __int16 Ratio;
  unsigned __int16 Light;
  unsigned __int16 NextQuick;
};

/* 18 */
#pragma pack(push, 1)
struct FullLight
{
  __int16 Intensity;
  __int16 TrueIntensity;
  __int16 Command;
  __int16 NextFull;
  __int16 X;
  __int16 Y;
  __int16 Z;
  char field_E[16];
  unsigned __int16 Flags;
};
#pragma pack(pop)

/* 20 */
#pragma pack(push, 1)
struct SingleObjectFace3
{
  __int16 PointNo[3];
  unsigned __int16 Texture;
  unsigned __int8 GFlags;
  unsigned __int8 Flags;
  unsigned __int16 ExCol;
  __int16 Object;
  __int16 Shade0;
  __int16 Shade1;
  __int16 Shade2;
  unsigned __int16 Light0;
  unsigned __int16 Light1;
  unsigned __int16 Light2;
  unsigned __int16 FaceNormal;
  __int16 WalkHeader;
  __int16 UnknTringl;
};
#pragma pack(pop)

/* 162 */
struct TngUObject
{
  __int16 NextThing;
  __int16 PrevThing;
  unsigned __int8 Group;
  unsigned __int8 EffectiveGroup;
  __int16 Object;
  __int16 MatrixIndex;
  unsigned __int8 NumbObjects;
  unsigned __int8 Angle;
  unsigned __int8 Token;
  char TokenDir;
  char OffX;
  char OffZ;
  __int16 TargetDX;
  __int16 TargetDY;
  __int16 TargetDZ;
  unsigned __int16 BuildStartVect;
  unsigned __int16 BuildNumbVect;
  unsigned __int16 ZZ_unused_but_pads_to_long_ObjectNo;
  __int16 ComHead;
  __int16 ComCur;
  __int16 Mood;
  __int16 RaiseDY[2];
  __int16 RaiseY[2];
  __int16 MinY[2];
  __int16 Timer[2];
  __int16 MaxY[2];
  __int16 TNode;
  __int16 Cost;
  __int16 Shite;
  __int16 BHeightA;
  __int16 BHeightB;
  unsigned __int16 Turn;
  unsigned __int16 TurnPadOnPS;
  __int16 tnode[4];
  unsigned __int8 player_in_me;
  unsigned __int8 unkn_4D;
  unsigned __int32 DrawTurn;
  unsigned __int16 tnode_50[4];
};

/* 163 */
struct TngUMGun
{
  __int16 PathIndex;
  unsigned __int16 UniqueID;
  unsigned __int8 Group;
  unsigned __int8 EffectiveGroup;
  __int16 Object;
  __int16 MatrixIndex;
  unsigned __int8 NumbObjects;
  unsigned __int8 ShotTurn;
  __int16 WeaponTurn;
  unsigned __int16 ObjectNo;
  __int16 PrevThing;
  __int16 NextThing;
  unsigned __int8 Token;
  char TokenDir;
  __int16 AngleDY;
  __int16 AngleX;
  __int16 AngleY;
  __int16 AngleZ;
  __int16 GotoX;
  __int16 GotoY;
  __int16 GotoZ;
  int Dummy11[5];
  __int16 RecoilTimer;
  unsigned __int16 MaxHealth;
  unsigned __int8 CurrentWeapon;
  unsigned __int8 Dummy12;
  unsigned __int8 Dummy13[6];
};

/* 164 */
struct TngUVehicle
{
  __int16 PathIndex;
  unsigned __int16 UniqueID;
  unsigned __int8 Group;
  unsigned __int8 EffectiveGroup;
  __int16 Object;
  __int16 MatrixIndex;
  unsigned __int8 NumbObjects;
  unsigned __int8 Dummy2;
  __int16 WeaponTurn;
  __int16 ReqdSpeed;
  unsigned __int16 MaxSpeed;
  unsigned __int16 PassengerHead;
  __int16 TNode;
  __int16 AngleDY;
  __int16 AngleX;
  __int16 AngleY;
  __int16 AngleZ;
  __int16 GotoX;
  __int16 GotoY;
  __int16 GotoZ;
  __int16 VehicleAcceleration;
  __int16 LeisurePlace;
  __int16 TargetDX;
  __int16 TargetDY;
  __int16 TargetDZ;
  __int16 OnFace;
  __int16 WorkPlace;
  __int16 ComHead;
  __int16 ComCur;
  __int16 Timer2;
  __int16 RecoilTimer;
  unsigned __int16 MaxHealth;
  __int16 Dummy4a;
  __int16 Dummy4b;
  __int16 Dummy5a;
  __int16 Dummy5b;
  __int16 AccelZ;
  __int16 AccelX;
  unsigned __int16 SubThing;
  __int16 Agok;
  int WobbleZP;
  int WobbleZV;
  unsigned __int8 Armour;
  unsigned __int8 PissedOffWithWaiting;
  __int16 ZebraOldHealth;
  unsigned __int16 destx;
  unsigned __int16 destz;
};

/* 90 */
struct TngUEffect
{
  unsigned __int16 MaxSpeed;
  __int16 ReqdSpeed;
  unsigned __int8 Group;
  unsigned __int8 EffectiveGroup;
  __int16 Object;
  __int16 WeaponTurn;
  unsigned __int8 NumbObjects;
  unsigned __int8 Angle;
  unsigned __int16 PassengerHead;
  __int16 TNode;
  __int16 AngleDY;
  __int16 AngleX;
  __int16 AngleY;
  __int16 AngleZ;
  __int16 GotoX;
  __int16 GotoY;
  __int16 GotoZ;
  __int16 VehicleAcceleration;
  __int16 MatrixIndex;
  __int16 LeisurePlace;
};

/* 73 */
union Mod
{
  __int16 Mods;
};

/* 167 */
struct DrawFrameId
{
  unsigned __int8 Version[5];
};

/* 165 */
struct TngUPerson
{
  __int16 PathIndex;
  unsigned __int16 UniqueID;
  unsigned __int8 Group;
  unsigned __int8 EffectiveGroup;
  unsigned __int16 ComHead;
  unsigned __int16 ComCur;
  char SpecialTimer;
  unsigned __int8 Angle;
  __int16 WeaponTurn;
  unsigned __int8 Brightness;
  unsigned __int8 ComRange;
  unsigned __int8 BumpMode;
  unsigned __int8 BumpCount;
  __int16 Vehicle;
  __int16 LinkPassenger;
  unsigned __int16 Within;
  unsigned __int16 LastDist;
  __int16 ComTimer;
  __int16 Timer2;
  __int16 StartTimer2;
  unsigned __int8 AnimMode;
  unsigned __int8 OldAnimMode;
  __int16 OnFace;
  union Mod UMod;
  __int16 Mood;
  struct DrawFrameId FrameId;
  unsigned __int8 Shadows[4];
  unsigned __int8 RecoilTimer;
  unsigned __int16 MaxHealth;
  unsigned __int8 Flag3;
  unsigned __int8 OldSubType;
  __int16 ShieldEnergy;
  unsigned __int8 ShieldGlowTimer;
  unsigned __int8 WeaponDir;
  unsigned __int16 SpecialOwner;
  unsigned __int16 WorkPlace;
  unsigned __int16 LeisurePlace;
  __int16 WeaponTimer;
  __int16 Target2;
  __int16 MaxShieldEnergy;
  __int16 PersuadePower;
  __int16 MaxEnergy;
  __int16 Energy;
  unsigned __int8 RecoilDir;
  unsigned __int8 CurrentWeapon;
  __int16 GotoX;
  __int16 GotoZ;
  __int16 TempWeapon;
  __int16 Stamina;
  __int16 MaxStamina;
  int WeaponsCarried;
};

/* 166 */
#pragma pack(push, 1)
union __attribute__((aligned(4))) ThingUnion
{
  TngUObject UObject;
  struct TngUMGun UMGun;
  struct TngUVehicle UVehicle;
  struct TngUEffect UEffect;
  struct TngUPerson UPerson;
};
#pragma pack(pop)

/* 21 */
#pragma pack(push, 1)
struct Thing
{
  __int16 Parent;
  __int16 Next;
  __int16 LinkParent;
  __int16 LinkChild;
  unsigned __int8 SubType;
  char Type;
  __int16 State;
  int Flag;
  __int16 LinkSame;
  __int16 LinkSameGroup;
  __int16 Radius;
  __int16 ThingOffset;
  int X;
  int Y;
  int Z;
  __int16 Frame;
  unsigned __int16 StartFrame;
  __int16 Timer1;
  __int16 StartTimer1;
  int VX;
  int VY;
  int VZ;
  __int16 Speed;
  __int16 Health;
  unsigned __int16 Owner;
  char PathOffset;
  char SubState;
  struct Thing *PTarget;
  int Flag2;
  __int16 GotoThingIndex;
  __int16 OldTarget;
  union ThingUnion U;
};
#pragma pack(pop)

/* 22 */
enum PersonState
{
  PerSt_NONE = 0x0,
  PerSt_GOTO_POINT = 0x1,
  PerSt_BOMB_BUILDING = 0x2,
  PerSt_WANDER = 0x3,
  PerSt_EXPLODE_EFFECT = 0x4,
  PerSt_WAIT = 0x5,
  PerSt_AGENT_DEFENSIVE = 0x6,
  PerSt_PICKUP_ITEM = 0x7,
  PerSt_DROP_ITEM = 0x8,
  PerSt_SHOOT_PERSON_WITH_BGUN = 0x9,
  PerSt_SHOOT_BGUN_AT = 0xA,
  PerSt_DIE = 0xB,
  PerSt_DIEING = 0xC,
  PerSt_DEAD = 0xD,
  PerSt_INIT_SAVE_VICTIM = 0xE,
  PerSt_SAVE_VICTIM = 0xF,
  PerSt_GOTO_PERSON = 0x10,
  PerSt_WAIT_P_DEAD = 0x11,
  PerSt_WAIT_ALL_G_DEAD = 0x12,
  PerSt_WAIT_MEM_G_DEAD = 0x13,
  PerSt_WAIT_P_NEAR = 0x14,
  PerSt_WAIT_MEM_G_NEAR = 0x15,
  PerSt_WAIT_P_ARRIVES = 0x16,
  PerSt_WAIT_MEM_G_ARRIVES = 0x17,
  PerSt_WAIT_TIME = 0x18,
  PerSt_DEFINE_ROUTE = 0x19,
  PerSt_UNUSED_1A = 0x1A,
  PerSt_KILL_PERSON = 0x1B,
  PerSt_BLOCK_PERSON = 0x1C,
  PerSt_SCARE_PERSON = 0x1D,
  PerSt_USE_ITEM = 0x1E,
  PerSt_STATIONARY_SHOT = 0x1F,
  PerSt_RECOIL_HIT = 0x20,
  PerSt_VEH_PARKED = 0x21,
  PerSt_VEH_DRIVEN = 0x22,
  PerSt_GOTO_POINT_REL = 0x23,
  PerSt_PERSON_BURNING = 0x24,
  PerSt_IN_VEHICLE = 0x25,
  PerSt_DRIVING_VEHICLE = 0x26,
  PerSt_V_GOTO_POINT_FLY = 0x27,
  PerSt_PERSUADE_PERSON = 0x28,
  PerSt_FOLLOW_PERSON = 0x29,
  PerSt_SUPPORT_PERSON = 0x2A,
  PerSt_PROTECT_PERSON = 0x2B,
  PerSt_GET_ITEM = 0x2C,
  PerSt_USE_VEHICLE = 0x2D,
  PerSt_USE_VEHICLE_TO_POINT = 0x2E,
  PerSt_WAIT_VEHICLE = 0x2F,
  PerSt_GOTO_VEHICLE = 0x30,
  PerSt_CATCH_TRAIN = 0x31,
  PerSt_WAIT_TRAIN = 0x32,
  PerSt_DESTROY_BUILDING = 0x33,
  PerSt_WANDER_DRIVE = 0x34,
  PerSt_GO_PLANT_MINE = 0x35,
  PerSt_WAIT_TO_EXIT_VEHICLE = 0x36,
  PerSt_CATCH_FERRY = 0x37,
  PerSt_EXIT_FERRY = 0x38,
  PerSt_AVOID_GROUP = 0x39,
  PerSt_UNUSED_3A = 0x3A,
  PerSt_BEING_PERSUADED = 0x3B,
};

/* 23 */
#pragma pack(push, 1)
struct Triangle
{
  __int16 points[3];
  __int16 field_6[3];
  char field_C;
  char field_D;
  __int16 field_E;
};
#pragma pack(pop)

/* 24 */
#pragma pack(push, 1)
struct RegionT
{
  __int16 field_0;
  char field_2;
};
#pragma pack(pop)

/* 25 */
struct Point
{
  int x;
  int y;
};

/* 26 */
struct __attribute__((packed)) __attribute__((aligned(1))) PathInfo
{
  char *directory;
  char use_cd;
};

/* 27 */
struct __attribute__((packed)) __attribute__((aligned(2))) mem_arena
{
  void *Pointer;
  unsigned int Size;
  mem_arena *Child;
  mem_arena *Parent;
  unsigned __int8 Used;
  unsigned __int8 Section;
};

/* 28 */
struct mem_block
{
  void *Pointer;
  unsigned int Selector;
  unsigned int Size;
};

/* 29 */
struct TbMemoryAvailable
{
  unsigned int TotalBytes;
  unsigned int TotalBytesFree;
  unsigned int TotalBytesUsed;
  unsigned int LargestBlock;
  unsigned int SmallestBlock;
};

/* 30 */
struct DOS_Registers
{
  __int16 r_es;
  __int16 r_cs;
  __int16 r_ss;
  __int16 r_ds;
  __int16 r_fs;
  __int16 r_gs;
};

/* 31 */
struct TbFileFind
{
  char field_0[144];
  char field_90[32];
};

/* 66 */
struct __attribute__((packed)) __attribute__((aligned(2))) SpecialUserInput
{
  int Bits;
  char DtX;
  char DtZ;
  __int16 Turn;
  char LastDir;
  char CurDir;
  __int16 MapX[3];
  __int16 MapY[3];
  __int16 MapZ[3];
  __int16 OnFace;
  __int16 ControlMode;
  __int16 MapIndex;
};

/* 32 */
#pragma pack(push, 1)
struct __attribute__((packed)) __attribute__((aligned(2))) PlayerInfo
{
  SpecialUserInput UserInput[4];
  int DirectControl[4];
  int ControlPad;
  struct Thing *MyAgent[4];
  char PrevWeapon[4];
  char PanelState[4];
  char PanelItem[4];
  __int16 Dummy98;
  char Dummy97;
  char MissionAgents;
  __int16 LastPacketType;
  char State[4];
  char SubState[4];
  char PrevState[4];
  char SubStateTimer[4];
  char DoubleMode;
  char PlayerNo;
  unsigned __int32 Weapons[4];
  Mod Mods[3];
  __int16 Mods_4_or_fldE8_m2;
  __int16 UserVY[3];
  __int16 field_EE;
  __int16 SpecialItems[4];
  __int16 GotoFace;
  __int16 PanelTimer;
  __int16 PanelX;
  __int16 PanelY;
  __int16 Target;
  __int16 field_102;
  __int16 TargetType;
  unsigned __int8 FourPacks[5][4];
  unsigned __int8 WepDelays[4][32];
  __int16 UserVX[4];
  __int16 UserVZ[3];
  __int16 field_1A8;
};
#pragma pack(pop)

/* 40 */
#pragma pack(push, 1)
struct GamePanel
{
  __int16 X;
  __int16 Y;
  __int16 Spr;
  __int16 Width;
  __int16 Height;
  __int16 Use;
  __int16 Flags;
  char ID;
  char Type;
};
#pragma pack(pop)

/* 222 */
#pragma pack(push, 1)
struct NetworkServiceInfo
{
  struct TbSerialDev *Id;
  __int16 GameId;
  __int16 Type;
  int Flags;
};
#pragma pack(pop)

/* 223 */
#pragma pack(push, 1)
struct NetworkServiceFunction
{
  int SessionCreate;
  int SessionJoin;
  int (__fastcall __spoils<eax,edx,ebx> *SessionExchange)(int, int, int *);
  int SessionInit;
  int SessionDial;
  int SessionAnswer;
  int SessionHangUp;
  int (__fastcall *UsedSessionInit)(int a1);
  int netsvcfunc_unkn20;
};
#pragma pack(pop)

/* 221 */
#pragma pack(push, 1)
struct TbNetworkSession
{
  __int16 Id;
  int GameId;
  char Name[8];
  __int16 HostPlayerNumber;
  __int16 MaxPlayers;
  __int16 Flags;
  char Reserved[20];
};
#pragma pack(pop)

/* 256 */
#pragma pack(push, 1)
union TbNetworkServiceUnion
{
  NetworkServiceFunction F;
  struct TbNetworkSession S;
};
#pragma pack(pop)

/* 41 */
#pragma pack(push, 1)
struct TbNetworkService
{
  NetworkServiceInfo I;
  TbNetworkServiceUnion U;
};
#pragma pack(pop)

/* 42 */
struct PolyPoint
{
  int X;
  int Y;
  int U;
  int V;
  int S;
};

/* 168 */
struct STngUEffect
{
  __int16 VX;
  __int16 VY;
  __int16 VZ;
  __int16 OX;
  __int16 OY;
  __int16 OZ;
};

/* 91 */
struct STngUScenery
{
  __int16 Frame;
  __int16 StartFrame;
  __int16 LightHead;
  __int16 LightDie;
  __int16 LightAnim;
  __int16 Health;
};

/* 92 */
struct STngUWeapon
{
  __int16 WeaponType;
  __int16 LastFired;
  __int16 Ammo;
  __int16 Owner;
  __int16 OnFace;
};

/* 93 */
#pragma pack(push, 1)
struct STngUTraffic
{
  __int16 Link[4];
  unsigned __int8 Flags[4];
};
#pragma pack(pop)

/* 94 */
struct STngULight
{
  __int16 MinBright;
  __int16 RangeBright;
};

/* 95 */
struct STngUBang
{
  __int16 shrapnel;
  __int16 phwoar;
};

/* 96 */
struct STngUFire
{
  __int16 flame;
};

/* 89 */
union SimpleThingUnion
{
  char bytes[12];
  STngUEffect UEffect;
  STngUScenery UScenery;
  STngUWeapon UWeapon;
  STngUTraffic UTraffic;
  STngULight ULight;
  STngUBang UBang;
  STngUFire UFire;
};

/* 43 */
#pragma pack(push, 1)
struct SimpleThing
{
  __int16 Parent;
  __int16 Next;
  __int16 LinkParent;
  __int16 LinkChild;
  char SubType;
  char Type;
  __int16 State;
  int Flag;
  __int16 LinkSame;
  __int16 Object;
  __int16 Radius;
  __int16 ThingOffset;
  int X;
  int Y;
  int Z;
  __int16 Frame;
  __int16 StartFrame;
  __int16 Timer1;
  __int16 StartTimer1;
  SimpleThingUnion U;
  __int16 field_38;
  __int16 UniqueID;
};
#pragma pack(pop)

/* 44 */
struct __attribute__((packed)) __attribute__((aligned(1))) WeaponDef
{
  __int16 RangeBlocks;
  __int16 HitDamage;
  __int16 ReFireDelay;
  __int16 Weight;
  __int16 EnergyUsed;
  __int16 Accuracy;
  __int16 TargetType;
  __int16 TargetMode;
  __int16 Flags;
  __int16 Sprite;
  unsigned __int16 Cost;
  __int16 Funding;
  char PercentPerDay;
};

/* 45 */
#pragma pack(push, 1)
struct ScreenTextBox
{
  unsigned __int16 X;
  unsigned __int16 Y;
  unsigned __int16 Width;
  __int16 Height;
  char DrawSpeed;
  char Timer;
  char TextSpeed;
  char LineSpacing;
  __int16 ScrollBarPos;
  __int16 ScrollBarSize;
  __int16 ScrollWindowHeight;
  __int16 ScrollWindowOffset;
  __int16 GrabPos;
  __int16 Lines;
  const char *Text;
  struct TbSprite *Font;
  unsigned __int8 (__fastcall __spoils<eax> *DrawFn)(struct ScreenTextBox *box);
  unsigned __int8 (__fastcall __spoils<eax> *DrawTextFn)(struct ScreenTextBox *box);
  struct ScreenButton *Buttons[2];
  struct ScreenInfoBox *Infos[2];
  __int16 TextTopLine;
  __int16 TextFadePos;
  __int16 Flags;
  unsigned __int8 Colour1;
  unsigned __int8 BGColour;
  char LineHeight;
  char field_41;
  char field_42;
  char field_43;
};
#pragma pack(pop)

/* 46 */
#pragma pack(push, 1)
struct __attribute__((packed)) __attribute__((aligned(2))) ScreenButton
{
  __int16 X;
  __int16 Y;
  unsigned __int16 Width;
  __int16 Height;
  const char *Text;
  struct TbSprite *Font;
  int (__fastcall __spoils<eax> *DrawFn)(struct ScreenButton *);
  int DrawTextFn;
  unsigned __int8 (__fastcall __spoils<eax> *CallBackFn)(unsigned __int8 click);
  int Radio;
  __int16 TextTopLine;
  __int16 TextFadePos;
  __int16 Flags;
  char DrawSpeed;
  char Timer;
  char TextSpeed;
  char Border;
  char Colour;
  char BGColour;
  char AccelKey;
  char RadioValue;
};
#pragma pack(pop)

/* 48 */
#pragma pack(push, 1)
struct __attribute__((packed)) __attribute__((aligned(1))) ScreenInfoBox
{
  __int16 X;
  __int16 Y;
  __int16 Width;
  __int16 Height;
  int Text1;
  char *Text2;
  int Font1;
  int Font2;
  int (__fastcall __spoils<eax> *DrawFn)(struct ScreenInfoBox *);
  int DrawTextFn;
  __int16 TextFadePos1;
  __int16 TextFadePos2;
  __int16 Flags;
  char DrawSpeed;
  char Timer;
  char TextSpeed;
  char Colour;
  char BGColour;
};
#pragma pack(pop)

/* 47 */
#pragma pack(push, 1)
struct ScreenBox
{
  __int16 X;
  __int16 Y;
  __int16 Width;
  __int16 Height;
  char DrawSpeed;
  char Timer;
  unsigned __int16 Flags;
  unsigned __int8 (__fastcall *DrawFn)(struct ScreenBox *);
  unsigned __int8 (__fastcall __spoils<eax> *SpecialDrawFn)(struct ScreenBox *box);
  __int16 Timer2;
  char Colour;
  char BGColour;
};
#pragma pack(pop)

/* 49 */
enum ThingType
{
  TT_NONE = 0x0,
  TT_UNKN1 = 0x1,
  TT_VEHICLE = 0x2,
  TT_PERSON = 0x3,
  TT_UNKN4 = 0x4,
  SmTT_STATIC = 0x5,
  TT_ROCKET = 0x6,
  TT_UNKN7 = 0x7,
  TT_UNKN8 = 0x8,
  TT_BUILDING = 0x9,
  SmTT_TRAFFIC = 0xA,
  TT_LASER11 = 0xB,
  TT_LASER_GUIDED = 0xC,
  TT_UNKN13 = 0xD,
  TT_UNKN14 = 0xE,
  TT_MINE = 0xF,
  TT_GRENADE = 0x10,
  SmTT_SPARK = 0x11,
  TT_UNKN18 = 0x12,
  TT_LASER_ELEC = 0x13,
  SmTT_INTELLIG_DOOR = 0x14,
  SmTT_SCALE_EFFECT = 0x15,
  SmTT_NUCLEAR_BOMB = 0x16,
  TT_UNKN23 = 0x17,
  SmTT_SMOKE_GENERATOR = 0x18,
  SmTT_DROPPED_ITEM = 0x19,
  SmTT_CARRIED_ITEM = 0x1A,
  SmTT_ELECTRIC_STRAND = 0x1B,
  TT_RAZOR_WIRE = 0x1C,
  TT_LASER29 = 0x1D,
  SmTT_TIME_POD = 0x1E,
  TT_AIR_STRIKE = 0x1F,
  SmTT_CANISTER = 0x20,
  TT_UNKN33 = 0x21,
  TT_UNKN34 = 0x22,
  TT_UNKN35 = 0x23,
  SmTT_STASIS_POD = 0x24,
  SmTT_SOUL = 0x25,
  TT_LASER38 = 0x26,
  TT_UNKN39 = 0x27,
  TT_UNKN40 = 0x28,
  TT_UNKN41 = 0x29,
  TT_UNKN42 = 0x2A,
  TT_UNKN43 = 0x2B,
  TT_UNKN44 = 0x2C,
  TT_UNKN45 = 0x2D,
  TT_UNKN46 = 0x2E,
  TT_UNKN47 = 0x2F,
  TT_UNKN48 = 0x30,
  TT_UNKN49 = 0x31,
  SmTT_BANG = 0x32,
  TT_UNKN51 = 0x33,
  SmTT_FIRE = 0x34,
  SmTT_SFX = 0x35,
  SmTT_TEMP_LIGHT = 0x36,
  TT_UNKN55 = 0x37,
  TT_UNKN56 = 0x38,
};

/* 50 */
enum SubTypeVehicle
{
  SubTT_VEH_UNKN0 = 0x0,
  SubTT_VEH_UNKN1 = 0x1,
  SubTT_VEH_UNKN2 = 0x2,
  SubTT_VEH_UNKN3 = 0x3,
  SubTT_VEH_UNKN4 = 0x4,
  SubTT_VEH_UNKN5 = 0x5,
  SubTT_VEH_UNKN6 = 0x6,
  SubTT_VEH_UNKN7 = 0x7,
  SubTT_VEH_UNKN8 = 0x8,
  SubTT_VEH_UNKN9 = 0x9,
  SubTT_VEH_UNKN10 = 0xA,
  SubTT_VEH_UNKN11 = 0xB,
  SubTT_VEH_UNKN12 = 0xC,
  SubTT_VEH_UNKN13 = 0xD,
  SubTT_VEH_UNKN14 = 0xE,
  SubTT_VEH_UNKN15 = 0xF,
  SubTT_VEH_UNKN16 = 0x10,
  SubTT_VEH_UNKN17 = 0x11,
  SubTT_VEH_UNKN18 = 0x12,
  SubTT_VEH_UNKN19 = 0x13,
  SubTT_VEH_UNKN20 = 0x14,
  SubTT_VEH_UNKN21 = 0x15,
  SubTT_VEH_UNKN22 = 0x16,
  SubTT_VEH_UNKN23 = 0x17,
  SubTT_VEH_UNKN24 = 0x18,
  SubTT_VEH_UNKN25 = 0x19,
  SubTT_VEH_UNKN26 = 0x1A,
  SubTT_VEH_UNKN27 = 0x1B,
  SubTT_VEH_UNKN28 = 0x1C,
  SubTT_VEH_TRAIN = 0x1D,
  SubTT_VEH_UNKN30 = 0x1E,
  SubTT_VEH_UNKN31 = 0x1F,
  SubTT_VEH_UNKN32 = 0x20,
  SubTT_VEH_UNKN33 = 0x21,
  SubTT_VEH_UNKN34 = 0x22,
  SubTT_VEH_UNKN35 = 0x23,
  SubTT_VEH_UNKN36 = 0x24,
  SubTT_VEH_UNKN37 = 0x25,
  SubTT_VEH_UNKN38 = 0x26,
  SubTT_VEH_UNKN39 = 0x27,
  SubTT_VEH_GROUND = 0x28,
  SubTT_VEH_SHUTTLE_POD = 0x29,
  SubTT_VEH_UNKN42 = 0x2A,
  SubTT_VEH_UNKN43 = 0x2B,
  SubTT_VEH_UNKN44 = 0x2C,
  SubTT_VEH_UNKN45 = 0x2D,
  SubTT_VEH_UNKN46 = 0x2E,
  SubTT_VEH_UNKN47 = 0x2F,
  SubTT_VEH_UNKN48 = 0x30,
  SubTT_VEH_UNKN49 = 0x31,
  SubTT_VEH_FLYING = 0x32,
  SubTT_VEH_TANK = 0x33,
  SubTT_VEH_UNKN52 = 0x34,
  SubTT_VEH_UNKN53 = 0x35,
  SubTT_VEH_SHIP = 0x36,
  SubTT_VEH_UNKN55 = 0x37,
  SubTT_VEH_UNKN56 = 0x38,
  SubTT_VEH_UNKN57 = 0x39,
  SubTT_VEH_UNKN58 = 0x3A,
  SubTT_VEH_MECH = 0x3B,
  SubTT_VEH_UNKN60 = 0x3C,
};

/* 51 */
#pragma pack(push, 1)
struct MyMapElement
{
  __int16 Texture;
  __int16 Shade;
  char ShadeR;
  unsigned __int8 Flags;
  __int16 Alt;
  __int16 Child;
  __int16 ColHead;
  __int16 Ambient;
  char Zip;
  unsigned __int8 Flags2;
  __int16 ColumnHead;
};
#pragma pack(pop)

/* 52 */
struct QuickLoad
{
  unsigned __int16 *Numb;
  void **Ptr;
  __int16 Size;
  __int16 Extra;
};

/* 53 */
struct Game
{
  int Time;
  int Credits;
  int Check;
  int Flags;
  int CProcess;
  int CDraw;
  int CashAtStart;
  int Expenditure;
  int SpareMemSize;
  __int16 GameMode;
  __int16 DisplayMode;
  __int16 ControlModes;
  __int16 Timer1;
  __int16 MissionStatus;
  __int16 MissionsDone;
  __int16 TrainsUsed;
  __int16 NIndex;
  __int16 Rocket1[15];
  __int16 NextRocket;
};

/* 55 */
struct BigBlip
{
  int X;
  int Z;
  char Colour;
  char Period;
  char Speed;
  char Counter;
};

/* 62 */
struct Arc
{
  int X1;
  int Z1;
  int X2;
  int Z2;
  char ColourIsUnused;
  char Period;
  char SpeedIsUnused;
  char Counter;
};

/* 54 */
#pragma pack(push, 1)
struct __attribute__((packed)) __attribute__((aligned(1))) Scanner
{
  int X1;
  int Y1;
  int X2;
  int Y2;
  int MX;
  int MZ;
  int Zoom;
  int Angle;
  int Contrast;
  int Brightness;
  int Width[16];
  char field_68[724];
  struct BigBlip BigBlip_m1[1];
  BigBlip BigBlip[16];
  Arc Arc[4];
  char Group[6];
  char GroupCol[6];
  unsigned __int8 GroupCount;
  __int16 NearThing1;
};
#pragma pack(pop)

/* 56 */
struct SingleTexture
{
  char TMapX1;
  char TMapY1;
  char TMapX2;
  char TMapY2;
  char TMapX3;
  char TMapY3;
  char Page;
  char padding1;
  __int16 pal;
  char field_A[6];
};

/* 58 */
#pragma pack(push, 1)
struct Mission
{
  int TextName;
  __int16 TextId;
  __int16 StartHead;
  __int16 SpecialEffectID;
  __int16 SuccessHead;
  __int16 FailHead;
  __int16 SourceID;
  __int16 SuccessID;
  __int16 FailID;
  char SpecialTrigger[3];
  char SuccessTrigger[3];
  char FailTrigger[3];
  char BankTest;
  __int16 SpecialEffectFailID;
  __int16 SpecialEffectSuccessID;
  __int16 StringIndex;
  char StartMap[3];
  char StartLevel[3];
  char SuccessMap[3];
  char SuccessLevel[3];
  char FailMap[3];
  char FailLevel[3];
  char MapNo;
  char LevelNo;
  char BankTestFail;
  char Complete;
  char MissionCond[5];
  char ReLevelNo;
  __int16 CashReward;
  char PANStart;
  char PANEnd;
  __int16 WaitToFade;
  __int16 PreProcess;
  char field_48[2];
  char field_4A;
  char field_4B;
};
#pragma pack(pop)

/* 59 */
struct Objective
{
  __int16 Next;
  char Map;
  char Level;
  __int16 Status;
  unsigned __int16 Type;
  __int16 Flags;
  __int16 Thing;
  __int16 X;
  __int16 Y;
  __int16 Z;
  __int16 Radius;
  char Pri;
  char Arg2;
  __int16 StringIndex;
  __int16 UniqueID;
  char ObjText;
  char field_1B[4];
  char field_1F;
};

/* 60 */
struct MissionStatus
{
  int CityDays;
  int CityHours;
  int Days;
  int Hours;
  __int16 CivsKilled;
  __int16 CivsPersuaded;
  __int16 SecurityKilled;
  __int16 SecurityPersuaded;
  __int16 EnemiesKilled;
  __int16 EnemiesPersuaded;
  int CashAtStart;
  int Expenditure;
  char HitAccuracy;
  char ObjectivesComplete;
  char AgentsLost;
  char AgentsGained;
};

/* 61 */
#pragma pack(push, 1)
struct ShadowTexture
{
  __int16 Width;
  __int16 Length;
  char X1;
  char Y1;
  char X2;
  char Y2;
};
#pragma pack(pop)

/* 64 */
struct CircleDetail
{
  int dangle;
  int babynumber;
};

/* 65 */
struct SphereDetail
{
  int dangley;
  int babyshift;
  int babynumber;
};

/* 67 */
struct Direction
{
  signed __int16 DiX;
  signed __int16 DiY;
};

/* 68 */
struct __attribute__((packed)) __attribute__((aligned(1))) CarGlare
{
  signed __int16 Dix;
  signed __int16 Diy;
  signed __int16 Diz;
  char Flag;
};

/* 69 */
struct ModDef
{
  __int16 PowerOutput;
  __int16 Resilience;
  __int16 Funding;
  __int16 Flags;
  char field_8[10];
  __int16 Sprite;
  __int16 Cost;
  char PercentPerDay;
  char field_17;
};

/* 70 */
struct PeepStat
{
  __int16 MaxHealth;
  __int16 MaxShield;
  __int16 MaximumStamina;
  __int16 MaxEnergy;
  __int16 PersuadeReqd;
  __int16 PersuadeWorth;
  __int16 Speed;
  __int16 dum2;
  __int16 dum3;
  __int16 dum4;
};

/* 71 */
struct Unplace_166fake_duplicate_s7
{
  __int16 field_0;
  __int16 field_2;
  __int16 field_4;
};

/* 72 */
struct CharacterSubst
{
  char OrigChar;
  char NewChar;
};

/* 74 */
struct __attribute__((packed)) __attribute__((aligned(1))) AgentInfo
{
  int Weapons[32];
  Mod Mods[32];
  int Sex;
  char RandomName[32];
  unsigned __int8 FourPacks[32][5];
  unsigned __int8 NumAgents;
};

/* 75 */
struct ResearchInfo
{
  unsigned __int16 WeaponProgress[10][32];
  unsigned __int16 ModProgress[10][32];
  unsigned __int8 WeaponDaysDone[32];
  unsigned __int8 ModDaysDone[32];
  int WeaponFunding;
  int ModFunding;
  char Scientists;
  char NumBases;
  char CurrentWeapon;
  char CurrentMod;
  int WeaponsAllowed;
  int ModsAllowed;
  int WeaponsCompleted;
  int ModsCompleted;
};

/* 76 */
struct SerialHandler;

/* 77 */
#pragma pack(push, 1)
struct SoundBankSizes
{
  int DatSize;
  int TabSize;
};
#pragma pack(pop)

/* 78 */
struct CommHandler;

/* 79 */
struct __attribute__((packed)) __attribute__((aligned(2))) IPXDatagramBackup
{
  int field_0;
  int field_4;
  __int16 field_8;
  char field_A[538];
  __int16 field_224;
};

/* 81 */
struct DevInput
{
  int Yaw[16];
  int Roll[16];
  int Pitch[16];
  int AnalogueX[16];
  int AnalogueY[16];
  int AnalogueZ[16];
  int AnalogueU[16];
  int AnalogueV[16];
  int AnalogueR[16];
  int DigitalX[16];
  int DigitalY[16];
  int DigitalZ[16];
  int DigitalU[16];
  int DigitalV[16];
  int DigitalR[16];
  int MinXAxis[16];
  int MinYAxis[16];
  int MinZAxis[16];
  int MinUAxis[16];
  int MinVAxis[16];
  int MinRAxis[16];
  int MaxXAxis[16];
  int MaxYAxis[16];
  int MaxZAxis[16];
  int MaxUAxis[16];
  int MaxVAxis[16];
  int MaxRAxis[16];
  int XCentre[16];
  int YCentre[16];
  int ZCentre[16];
  int UCentre[16];
  int VCentre[16];
  int RCentre[16];
  int HatX[16];
  int HatY[16];
  int HatMax[16];
  int Buttons[16];
  int NumberOfButtons[16];
  int ConfigType[16];
  int MenuButtons[16];
  int Type;
  int NumberOfDevices;
  int DeviceType[16];
  char Init[16];
};

/* 82 */
struct Packet
{
  unsigned __int16 Action;
  unsigned __int16 Data;
  __int16 X;
  __int16 Y;
  __int16 Z;
  unsigned __int16 Action2;
  unsigned __int16 Data2;
  __int16 X2;
  __int16 Y2;
  __int16 Z2;
  unsigned __int16 Action3;
  unsigned __int16 Data3;
  __int16 X3;
  __int16 Y3;
  __int16 Z3;
  unsigned __int16 Action4;
  unsigned __int16 Data4;
  __int16 X4;
  __int16 Y4;
  __int16 Z4;
  int D1Seed;
  int D2Check;
};

/* 83 */
struct BbpAdds
{
  int du;
  int dv;
};

/* 84 */
struct scanstr1
{
  int u;
  int v;
};

/* 85 */
enum SubTypePerson
{
  SubTT_PERS_NONE = 0x0,
  SubTT_PERS_AGENT = 0x1,
  SubTT_PERS_ZEALOT = 0x2,
  SubTT_PERS_PUNK_F = 0x3,
  SubTT_PERS_BRIEFCASE_M = 0x4,
  SubTT_PERS_WHITE_BRUN_F = 0x5,
  SubTT_PERS_MERCENARY = 0x6,
  SubTT_PERS_MECH_SPIDER = 0x7,
  SubTT_PERS_POLICE = 0x8,
  SubTT_PERS_PUNK_M = 0x9,
  SubTT_PERS_SCIENTIST = 0xA,
  SubTT_PERS_SHADY_M = 0xB,
  SubTT_PERS_HIGH_PRIEST = 0xC,
  SubTT_PERS_WHIT_BLOND_F = 0xD,
  SubTT_PERS_LETH_JACKT_M = 0xE,
  SubTT_PERS_FAST_BLOND_F = 0xF,
};

/* 86 */
struct NewMailItem
{
  unsigned __int8 RecvDay;
  unsigned __int8 RecvMonth;
  unsigned __int8 RecvYear;
  unsigned __int8 Mission;
  unsigned __int8 Flag;
};

/* 87 */
struct EmailItem
{
  unsigned __int8 RefNum;
  unsigned __int8 RecvDay;
  unsigned __int8 RecvMonth;
  unsigned __int8 RecvYear;
  unsigned __int8 Mission;
};

/* 88 */
struct City
{
  __int16 X;
  __int16 Y;
  char MapID;
  unsigned __int8 Level;
  unsigned __int8 Flags;
  char Info;
  __int16 TextIndex[6];
  int Dummy2[5];
};

/* 97 */
enum GameObjective
{
  GAME_OBJ_NONE = 0x0,
  GAME_OBJ_P_DEAD = 0x1,
  GAME_OBJ_ALL_G_DEAD = 0x2,
  GAME_OBJ_MEM_G_DEAD = 0x3,
  GAME_OBJ_P_NEAR = 0x4,
  GAME_OBJ_MEM_G_NEAR = 0x5,
  GAME_OBJ_P_ARRIVES = 0x6,
  GAME_OBJ_MEM_G_ARRIVES = 0x7,
  GAME_OBJ_ALL_G_ARRIVES = 0x8,
  GAME_OBJ_PERSUADE_P = 0x9,
  GAME_OBJ_PERSUADE_MEM_G = 0xA,
  GAME_OBJ_PERSUADE_ALL_G = 0xB,
  GAME_OBJ_TIME = 0xC,
  GAME_OBJ_GET_ITEM = 0xD,
  GAME_OBJ_USE_ITEM = 0xE,
  GAME_OBJ_FUNDS = 0xF,
  GAME_OBJ_DESTROY_OBJECT = 0x10,
  GAME_OBJ_PKILL_P = 0x11,
  GAME_OBJ_PKILL_G = 0x12,
  GAME_OBJ_PKILL_ALL_G = 0x13,
  GAME_OBJ_USE_PANET = 0x14,
  GAME_OBJ_NONE21 = 0x15,
  GAME_OBJ_PROTECT_G = 0x16,
  GAME_OBJ_P_PERS_G = 0x17,
  GAME_OBJ_ALL_G_USE_V = 0x18,
  GAME_OBJ_UNUSED_25 = 0x19,
  GAME_OBJ_UNUSED_26 = 0x1A,
};

/* 98 */
enum WeaponType
{
  WEP_NULL = 0x0,
  WEP_UZI = 0x1,
  WEP_MINIGUN = 0x2,
  WEP_LASER = 0x3,
  WEP_ELLASER = 0x4,
  WEP_RAP = 0x5,
  WEP_NUCLGREN = 0x6,
  WEP_PERSUADRTRN = 0x7,
  WEP_FLAMER = 0x8,
  WEP_H2HTASER = 0x9,
  WEP_CRAZYGAS = 0xA,
  WEP_KOGAS = 0xB,
  WEP_ELEMINE = 0xC,
  WEP_EXPLMINE = 0xD,
  WEP_NAPALMMINE = 0xE,
  WEP_LONGRANGE = 0xF,
  WEP_AIRSTRIKE = 0x10,
  WEP_BEAM = 0x11,
  WEP_RAZORWIRE = 0x12,
  WEP_SONICBLAST = 0x13,
  WEP_QDEVASTATOR = 0x14,
  WEP_PERSUADER2 = 0x15,
  WEP_STASISFLD = 0x16,
  WEP_ENERGYSHLD = 0x17,
  WEP_SOULGUN = 0x18,
  WEP_TIMEGUN = 0x19,
  WEP_CEREBUSIFF = 0x1A,
  WEP_MEDI1 = 0x1B,
  WEP_MEDI2 = 0x1C,
  WEP_EXPLWIRE = 0x1D,
  WEP_CLONESHLD = 0x1E,
};

/* 99 */
struct LevelMisc
{
  __int16 X;
  __int16 Y;
  __int16 Z;
  __int16 Group;
  __int16 Weapon;
  unsigned __int8 Flag;
  unsigned __int8 Type;
  char field_C[9];
  char field_15;
};

/* 100 */
struct BezEdit
{
  __int16 X;
  __int16 Y;
  __int16 Z;
  __int16 ThingIndex;
  __int16 Flags;
  __int16 Type;
  char field_C[14];
  __int16 field_1A;
};

/* 101 */
#pragma pack(push, 1)
struct Command
{
  __int16 Next;
  __int16 OtherThing;
  __int16 X;
  __int16 Y;
  __int16 Z;
  char Type;
  char SubType;
  __int16 field_C;
  __int16 Arg1;
  __int16 Arg2;
  __int16 Time;
  __int16 MyThing;
  __int16 Parent;
  int Flags;
  __int16 field_1C;
  __int16 field_1E;
};
#pragma pack(pop)

/* 102 */
struct __attribute__((packed)) __attribute__((aligned(1))) SortLine
{
  __int16 X1;
  __int16 Y1;
  __int16 X2;
  __int16 Y2;
  char Col;
  char Shade;
  char Flags;
};

/* 103 */
struct SortSprite
{
  __int16 X;
  __int16 Y;
  __int16 Z;
  __int16 Frame;
  struct Thing *PThing;
  char Brightness;
  char Angle;
  __int16 Scale;
};

/* 104 */
struct __attribute__((packed)) __attribute__((aligned(1))) DrawItem
{
  char Type;
  __int16 Offset;
  __int16 Child;
};

/* 105 */
struct SpecialPoint
{
  __int16 X;
  __int16 Y;
  __int16 Z;
  __int16 PadTo8;
};

/* 106 */
struct __attribute__((packed)) __attribute__((aligned(1))) FloorTile
{
  __int16 X[4];
  __int16 Y[4];
  struct SingleFloorTexture *Texture;
  char V[4];
  __int16 Shade[4];
  char Col;
  char Flags;
  char Flags2;
  char Flags2b;
  char Page;
  __int16 Offset;
};

/* 118 */
struct SingleFloorTexture
{
  unsigned __int8 TMapX1;
  unsigned __int8 TMapY1;
  unsigned __int8 TMapX2;
  unsigned __int8 TMapY2;
  unsigned __int8 TMapX3;
  unsigned __int8 TMapY3;
  unsigned __int8 TMapX4;
  unsigned __int8 TMapY4;
  unsigned __int8 Page;
  char field_9[3];
  char field_C[5];
  char field_11;
};

/* 107 */
struct ColColumn
{
  unsigned int QBits[4];
};

/* 108 */
struct WalkHeader
{
  unsigned __int16 Count;
  unsigned __int16 StartItem;
};

/* 109 */
struct ColVect
{
  __int16 X1;
  __int16 Y1;
  __int16 Z1;
  __int16 X2;
  __int16 Y2;
  __int16 Z2;
  __int16 Face;
};

/* 110 */
struct ColVectList
{
  unsigned __int16 Vect;
  unsigned __int16 NextColList;
  __int16 Object;
};

/* 111 */
struct LightCommand
{
  unsigned __int8 Flags;
  unsigned __int8 Mode;
  char Timer;
  unsigned __int8 Maximum;
  unsigned __int8 Minimum;
  unsigned __int8 MaximumF;
  unsigned __int8 MinimumF;
  char Time1;
  char Time2;
  char Check;
  __int16 Intensity;
  char field_C;
  char field_D;
  char field_E;
  char field_F;
  __int16 field_10;
  __int16 field_12;
  char field_14;
  char field_15[14];
  char field_23;
};

/* 112 */
#pragma pack(push, 1)
struct TrafficNode
{
  __int16 X;
  __int16 Y;
  __int16 Z;
  struct STngUTraffic UTraffic;
  unsigned __int16 Flags;
  __int16 GateLink;
  char field_16[11];
  __int16 Dummy1;
  char Dummy2;
};
#pragma pack(pop)

/* 113 */
#pragma pack(push, 1)
struct AnimTmap
{
  unsigned __int16 Texture;
  unsigned __int16 TMap[10];
  unsigned __int8 Delay[10];
  unsigned __int16 Flags;
  char field_22;
  char field_23;
  char field_24[17];
  char field_35;
};
#pragma pack(pop)

/* 114 */
#pragma pack(push, 1)
struct SingleObjectFace4
{
  __int16 PointNo[4];
  unsigned __int16 Texture;
  unsigned __int8 GFlags;
  unsigned __int8 Flags;
  unsigned __int16 ExCol;
  __int16 Object;
  unsigned __int16 Shade0;
  unsigned __int16 Shade1;
  unsigned __int16 Shade2;
  __int16 Shade3;
  __int16 Light0;
  __int16 Light1;
  __int16 Light2;
  __int16 Light3;
  unsigned __int16 FaceNormal;
  __int16 WalkHeader;
  __int16 UnknTringl1;
  __int16 UnknTringl2;
};
#pragma pack(pop)

/* 115 */
struct Normal
{
  int NX;
  int NY;
  int NZ;
  int LightRatio;
};

/* 116 */
#pragma pack(push, 1)
struct SingleObject
{
  unsigned __int16 StartFace;
  unsigned __int16 NumbFaces;
  unsigned __int16 NextObject;
  unsigned __int16 StartFace4;
  unsigned __int16 NumbFaces4;
  unsigned __int16 ThingNo;
  __int16 OffsetX;
  __int16 OffsetY;
  __int16 OffsetZ;
  __int16 ObjectNo;
  __int16 MapX;
  __int16 MapZ;
  unsigned __int16 StartPoint;
  unsigned __int16 EndPoint;
  __int16 field_1C;
  __int16 field_1E;
  char field_20[3];
  char field_23;
};
#pragma pack(pop)

/* 117 */
#pragma pack(push, 1)
struct SinglePoint
{
  unsigned __int16 PointOffset;
  __int16 X;
  __int16 Y;
  __int16 Z;
  unsigned __int8 Pad1;
  unsigned __int8 Flags;
};
#pragma pack(pop)

/* 119 */
#pragma pack(push, 1)
struct Animation
{
  unsigned __int8 *OutBuf;
  int anfield_4;
  __int16 Xpos;
  __int16 Ypos;
  __int16 anfield_C;
  unsigned __int16 Flags;
  unsigned __int8 *UnkBuf;
  int FLCFileHeader__Size;
  __int16 FLCFileHeader__Magic;
  __int16 FLCFileHeader__NumberOfFrames[1];
  __int16 FLCFileHeader__Width[1];
  __int16 FLCFileHeader__Height[1];
  int FLCPrefixChunk__Size;
  __int16 FLCPrefixChunk__Type;
  __int16 anfield_26[5];
  int anfield_30;
  int anfield_34;
  int FileHandle;
  char Filename[48];
  __int16 anfield_6C;
  __int16 Type;
};
#pragma pack(pop)

/* 120 */
enum ScreenType : __int8
{
  SCRT_NONE = 0x0,
  SCRT_MISSION = 0x1,
  SCRT_2 = 0x2,
  SCRT_WORLDMAP = 0x3,
  SCRT_CRYO = 0x4,
  SCRT_EQUIP = 0x5,
  SCRT_MAINMENU = 0x6,
  SCRT_SYSMENU = 0x7,
  SCRT_RESEARCH = 0x8,
  SCRT_9 = 0x9,
  SCRT_LOGIN = 0xA,
  SCRT_B = 0xB,
  SCRT_ALERTBOX = 0xC,
  SCRT_D = 0xD,
  SCRT_E = 0xE,
  SCRT_F = 0xF,
  SCRT_10 = 0x10,
  SCRT_11 = 0x11,
  SCRT_12 = 0x12,
  SCRT_13 = 0x13,
  SCRT_14 = 0x14,
  SCRT_15 = 0x15,
  SCRT_99 = 0x63,
};

/* 121 */
struct cfpack2_struct
{
  char psiz;
  char ptyp;
  char prdm[32];
  char field_22[3];
  char prdn[32];
  char prdsn[16];
  char prdrl[16];
};

/* 122 */
enum vfx1_packtyp_enum
{
  NULLP = 0x0,
  SYSI = 0x1,
  VNDI = 0x2,
  SYSC = 0x3,
  HMS = 0x4,
  SVM = 0x5,
  HTD = 0x6,
  HPD = 0x7,
};

/* 123 */
struct SampleTable
{
  int field_0;
  int field_4;
  struct HeapMgrHandle *hmhandle;
};

/* 124 */
struct HeapMgrHandle
{
  char field_0[14];
  char field_E;
};

/* 125 */
struct HeapMgrHeader
{
  int field_0;
  int field_4;
  int field_8;
  int field_C;
  int field_10;
  int field_14;
  int field_18;
  int field_1C;
  int field_20;
};

/* 126 */
struct SynTime
{
  char Minute;
  char Hour;
  char Day;
  char Month;
  char Year;
};

/* 127 */
struct ExplodeFace3
{
  __int16 Texture;
  __int16 Flags;
  char Type;
  char Col;
  __int16 X0;
  __int16 Y0;
  __int16 Z0;
  __int16 X1;
  __int16 Y1;
  __int16 Z1;
  __int16 X2;
  __int16 Y2;
  __int16 Z2;
  __int16 X3;
  __int16 Y3;
  __int16 Z3;
  __int16 PointOffset;
  __int16 Timer;
  __int16 X;
  __int16 Y;
  __int16 Z;
  char DyX;
  char DyY;
  char DyZ;
  char AngleDX;
  char AngleDY;
  char AngleDZ;
};

/* 128 */
struct M33
{
  int R[3][3];
};

/* 129 */
struct __attribute__((packed)) __attribute__((aligned(1))) SampleInfo
{
  struct SNDSAMPLE *SampleHandle;
  signed __int32 SampleVolume;
  unsigned __int16 SamplePitch;
  unsigned __int16 SamplePan;
  unsigned __int16 FadeToVolume;
  unsigned __int32 SourceID;
  signed __int16 SampleNumber;
  unsigned __int8 FadeState;
  unsigned __int8 FadeStopFlag;
  unsigned __int8 FadeStep;
  unsigned __int8 UserFlag;
  unsigned __int8 SampleType;
};

/* 202 */
struct SNDSAMPLE
{
  struct DIG_DRIVER *driver;
  unsigned int status;
  void *start[2];
  unsigned int len[2];
  unsigned int pos[2];
  unsigned int done[2];
  int current_buffer;
  int last_buffer;
  int loop_count;
  int format;
  unsigned int flags;
  int playback_rate;
  int volume;
  int pan;
  int vol_scale[2][256];
  void *SOB;
  void *EOB;
  void *EOS;
  int user_data[8];
  int system_data[8];
};

/* 132 */
struct GroupAction
{
  int FiredOn;
  int Hit;
  __int16 Dead;
  __int16 Alive;
  __int16 Persuaded;
  __int16 Storming;
};

/* 133 */
#pragma pack(push, 1)
struct Element
{
  unsigned __int16 ToSprite;
  __int16 X;
  __int16 Y;
  unsigned __int16 Flags;
  unsigned __int16 Next;
};
#pragma pack(pop)

/* 134 */
enum KeyCodes
{
  KC_UNASSIGNED = 0x0,
  KC_ESCAPE = 0x1,
  KC_1 = 0x2,
  KC_2 = 0x3,
  KC_3 = 0x4,
  KC_4 = 0x5,
  KC_5 = 0x6,
  KC_6 = 0x7,
  KC_7 = 0x8,
  KC_8 = 0x9,
  KC_9 = 0xA,
  KC_0 = 0xB,
  KC_MINUS = 0xC,
  KC_EQUALS = 0xD,
  KC_BACK = 0xE,
  KC_TAB = 0xF,
  KC_Q = 0x10,
  KC_W = 0x11,
  KC_E = 0x12,
  KC_R = 0x13,
  KC_T = 0x14,
  KC_Y = 0x15,
  KC_U = 0x16,
  KC_I = 0x17,
  KC_O = 0x18,
  KC_P = 0x19,
  KC_LBRACKET = 0x1A,
  KC_RBRACKET = 0x1B,
  KC_RETURN = 0x1C,
  KC_LCONTROL = 0x1D,
  KC_A = 0x1E,
  KC_S = 0x1F,
  KC_D = 0x20,
  KC_F = 0x21,
  KC_G = 0x22,
  KC_H = 0x23,
  KC_J = 0x24,
  KC_K = 0x25,
  KC_L = 0x26,
  KC_SEMICOLON = 0x27,
  KC_APOSTROPHE = 0x28,
  KC_GRAVE = 0x29,
  KC_LSHIFT = 0x2A,
  KC_BACKSLASH = 0x2B,
  KC_Z = 0x2C,
  KC_X = 0x2D,
  KC_C = 0x2E,
  KC_V = 0x2F,
  KC_B = 0x30,
  KC_N = 0x31,
  KC_M = 0x32,
  KC_COMMA = 0x33,
  KC_PERIOD = 0x34,
  KC_SLASH = 0x35,
  KC_RSHIFT = 0x36,
  KC_MULTIPLY = 0x37,
  KC_LALT = 0x38,
  KC_SPACE = 0x39,
  KC_CAPITAL = 0x3A,
  KC_F1 = 0x3B,
  KC_F2 = 0x3C,
  KC_F3 = 0x3D,
  KC_F4 = 0x3E,
  KC_F5 = 0x3F,
  KC_F6 = 0x40,
  KC_F7 = 0x41,
  KC_F8 = 0x42,
  KC_F9 = 0x43,
  KC_F10 = 0x44,
  KC_NUMLOCK = 0x45,
  KC_SCROLL = 0x46,
  KC_NUMPAD7 = 0x47,
  KC_NUMPAD8 = 0x48,
  KC_NUMPAD9 = 0x49,
  KC_SUBTRACT = 0x4A,
  KC_NUMPAD4 = 0x4B,
  KC_NUMPAD5 = 0x4C,
  KC_NUMPAD6 = 0x4D,
  KC_ADD = 0x4E,
  KC_NUMPAD1 = 0x4F,
  KC_NUMPAD2 = 0x50,
  KC_NUMPAD3 = 0x51,
  KC_NUMPAD0 = 0x52,
  KC_DECIMAL = 0x53,
  KC_OEM_102 = 0x56,
  KC_F11 = 0x57,
  KC_F12 = 0x58,
  KC_F13 = 0x64,
  KC_F14 = 0x65,
  KC_F15 = 0x66,
  KC_KANA = 0x70,
  KC_ABNT_C1 = 0x73,
  KC_CONVERT = 0x79,
  KC_NOCONVERT = 0x7B,
  KC_YEN = 0x7D,
  KC_ABNT_C2 = 0x7E,
  KC_NUMPADEQUALS = 0x8D,
  KC_PREVTRACK = 0x90,
  KC_AT = 0x91,
  KC_COLON = 0x92,
  KC_UNDERLINE = 0x93,
  KC_KANJI = 0x94,
  KC_STOP = 0x95,
  KC_AX = 0x96,
  KC_UNLABELED = 0x97,
  KC_NEXTTRACK = 0x99,
  KC_NUMPADENTER = 0x9C,
  KC_RCONTROL = 0x9D,
  KC_MUTE = 0xA0,
  KC_CALCULATOR = 0xA1,
  KC_PLAYPAUSE = 0xA2,
  KC_MEDIASTOP = 0xA4,
  KC_VOLUMEDOWN = 0xAE,
  KC_VOLUMEUP = 0xB0,
  KC_WEBHOME = 0xB2,
  KC_NUMPADCOMMA = 0xB3,
  KC_DIVIDE = 0xB5,
  KC_SYSRQ = 0xB7,
  KC_RALT = 0xB8,
  KC_PAUSE = 0xC5,
  KC_HOME = 0xC7,
  KC_UP = 0xC8,
  KC_PGUP = 0xC9,
  KC_LEFT = 0xCB,
  KC_RIGHT = 0xCD,
  KC_END = 0xCF,
  KC_DOWN = 0xD0,
  KC_PGDOWN = 0xD1,
  KC_INSERT = 0xD2,
  KC_DELETE = 0xD3,
  KC_LWIN = 0xDB,
  KC_RWIN = 0xDC,
  KC_APPS = 0xDD,
  KC_POWER = 0xDE,
  KC_SLEEP = 0xDF,
  KC_WAKE = 0xE3,
};

/* 135 */
#pragma pack(push, 1)
struct __attribute__((packed)) __attribute__((aligned(1))) unkn_mech_struc1
{
  char field_0;
  int field_1;
  int field_5;
  int field_9;
  int field_D;
};
#pragma pack(pop)

/* 136 */
#pragma pack(push, 1)
struct __attribute__((packed)) __attribute__((aligned(1))) unkn_mech_struc2
{
  int field_0;
  char field_4[132];
  char field_88;
};
#pragma pack(pop)

/* 137 */
#pragma pack(push, 1)
struct __attribute__((packed)) __attribute__((aligned(2))) unkn_mech_struc3
{
  __int16 mech3_unkn_thing;
  __int16 mech3_unkn_fld_2;
  char mech3_unkn_fld_4[8];
  char mech3_unkn_fld_C[23];
  __int16 mech3_unkn_fld_23;
  int mech3_unkn_vec_25[9];
  int mech3_unkn_fld_49;
  char mech3_unkn_fld_4D[7];
  int mech3_unkn_fld_54[3];
  char field_60;
  int field_61;
  int field_65;
  int field_69;
  char field_6D[3];
  int field_70;
  char field_74;
  char field_75;
};
#pragma pack(pop)

/* 138 */
struct unkn_mech_struc4
{
  char field_0[121];
  char field_79;
};

/* 139 */
#pragma pack(push, 1)
struct __attribute__((packed)) __attribute__((aligned(1))) MyPath
{
  unsigned __int8 Flag;
  __int16 X[4];
  __int16 Z[4];
  unsigned __int16 Next;
};
#pragma pack(pop)

/* 140 */
enum __bitmask GameFlags
{
  GamF_BillboardMovies = 0x1,
  GamF_AdvLights = 0x2,
  GamF_Unkn0004 = 0x4,
  GamF_Unkn0008 = 0x8,
  GamF_MortalGame = 0x10,
  GamF_Unkn0020 = 0x20,
  GamF_RenderScene = 0x40,
  GamF_StopThings = 0x80,
  GamF_Unkn0100 = 0x100,
  GamF_Unkn0200 = 0x200,
  GamF_Unkn0400 = 0x400,
  GamF_Unkn0800 = 0x800,
  GamF_Unkn1000 = 0x1000,
  GamF_Unkn2000 = 0x2000,
  GamF_Unkn4000 = 0x4000,
  GamF_Unkn8000 = 0x8000,
  GamF_Unkn00010000 = 0x10000,
  GamF_Unkn00020000 = 0x20000,
  GamF_Unkn00040000 = 0x40000,
  GamF_SkipIntro = 0x80000,
  GamF_Unkn00100000 = 0x100000,
  GamF_Unkn00200000 = 0x200000,
  GamF_Unkn00400000 = 0x400000,
  GamF_Unkn00800000 = 0x800000,
  GamF_Unkn01000000 = 0x1000000,
  GamF_Unkn02000000 = 0x2000000,
  GamF_Unkn04000000 = 0x4000000,
  GamF_Unkn08000000 = 0x8000000,
  GamF_Unkn10000000 = 0x10000000,
};

/* 142 */
struct WayPoint
{
  int x8;
  int y8;
};

/* 141 */
struct Path
{
  int ax8;
  int ay8;
  int bx8;
  int by8;
  int PathLength;
  struct WayPoint WayPoints[256];
};

/* 143 */
enum DrawItemType : __int8
{
  DrIT_NONE = 0x0,
  DrIT_Unkn1 = 0x1,
  DrIT_Unkn2 = 0x2,
  DrIT_Unkn3 = 0x3,
  DrIT_Unkn4 = 0x4,
  DrIT_Unkn5 = 0x5,
  DrIT_Unkn6 = 0x6,
  DrIT_Unkn7 = 0x7,
  DrIT_Unkn8 = 0x8,
  DrIT_Unkn9 = 0x9,
  DrIT_Unkn10 = 0xA,
  DrIT_Unkn11 = 0xB,
  DrIT_Unkn12 = 0xC,
  DrIT_Unkn13 = 0xD,
  DrIT_Unkn14 = 0xE,
  DrIT_Unkn15 = 0xF,
  DrIT_Unkn16 = 0x10,
  DrIT_Unkn17 = 0x11,
  DrIT_Unkn18 = 0x12,
  DrIT_Unkn19 = 0x13,
  DrIT_Unkn20 = 0x14,
  DrIT_Unkn21 = 0x15,
  DrIT_Unkn22 = 0x16,
  DrIT_Unkn23 = 0x17,
  DrIT_Unkn24 = 0x18,
  DrIT_Unkn25 = 0x19,
  DrIT_Unkn26 = 0x1A,
};

/* 153 */
struct Rect
{
  __int16 x;
  __int16 y;
  __int16 w;
  __int16 h;
};

/* 156 */
#pragma pack(push, 1)
struct NetscanObjective
{
  unsigned __int16 CreditCost;
  __int16 TextOffset;
  char AnimNo;
  __int16 brobjfld_3;
  unsigned __int8 TextLines;
  unsigned __int8 X[5];
  unsigned __int8 Z[5];
  unsigned __int8 brobjfld_12;
  char brobjfld_13;
};
#pragma pack(pop)

/* 208 */
#pragma pack(push, 1)
struct NetworkPlayerUFourPacks
{
  unsigned __int8 FourPacks[4][5];
};
#pragma pack(pop)

/* 210 */
#pragma pack(push, 1)
struct NetworkPlayerUProgress
{
  int Credits;
  char val_181189;
  char val_181183;
  char TechLevel;
  char SelectedCity;
  __int16 npfield_8;
  __int16 npfield_A;
  char ControlMode[4];
  char DoubleMode;
  char val_flags_08;
  char npfield_12;
  char val_15516D;
  int Expenditure;
};
#pragma pack(pop)

/* 206 */
#pragma pack(push, 1)
struct NetworkPlayerUWepMod
{
  int Weapons[4];
  __int16 Mods[4];
};
#pragma pack(pop)

/* 209 */
#pragma pack(push, 1)
union NetworkPlayerUnion
{
  NetworkPlayerUFourPacks FourPacks;
  NetworkPlayerUProgress Progress;
  struct NetworkPlayerUWepMod WepMod;
  char Text[24];
};
#pragma pack(pop)

/* 157 */
#pragma pack(push, 1)
struct NetworkPlayer
{
  unsigned __int8 Type;
  union NetworkPlayerUnion U;
  char npfield_19;
};
#pragma pack(pop)

/* 158 */
struct FOV
{
  int field_0;
  int field_4;
  int field_8;
  int field_C;
  int field_10;
  int field_14;
};

/* 159 */
struct Triangulation
{
  int tri_allocated;
  int tri_initialised;
  int last_tri;
  int ix_Triangles;
  int count_Triangles;
  int free_Triangles;
  int triangle_top;
  int max_Triangles;
  struct TrTriangle *Triangles;
  int ix_Points;
  int count_Points;
  int free_Points;
  int point_top;
  int max_Points;
  struct TrPoint *Points;
};

/* 161 */
struct TrTriangle
{
  unsigned __int16 point[3];
  __int16 tri[3];
  __int16 jump;
  char solid;
  unsigned __int8 enter;
};

/* 160 */
#pragma pack(push, 1)
struct __attribute__((aligned(4))) TrPoint
{
  int x;
  int y;
};
#pragma pack(pop)

/* 169 */
enum DisplayMode : __int16
{
  DpM_NONE = 0x0,
  DpM_UNKN_1 = 0x1,
  DpM_2 = 0x2,
  DpM_31 = 0x31,
  DpM_UNKN_32 = 0x32,
  DpM_UNKN_33 = 0x33,
  DpM_34 = 0x34,
  DpM_36 = 0x36,
  DpM_UNKN_37 = 0x37,
  DpM_38 = 0x38,
  DpM_39 = 0x39,
  DpM_UNKN_3A = 0x3A,
  DpM_UNKN_3B = 0x3B,
};

/* 170 */
struct UnknStruct03
{
  __int16 anonymous_0;
  __int16 anonymous_1;
  __int16 anonymous_2;
  __int16 iterations;
};

/* 172 */
#pragma pack(push, 1)
struct __attribute__((packed)) __attribute__((aligned(2))) TbNetworkPlayer
{
  __int16 Id;
  int PlayerNumber;
  char Name[16];
};
#pragma pack(pop)

/* 171 */
#pragma pack(push, 1)
struct TbNetworkSessionList
{
  struct TbNetworkSession Session;
  TbNetworkPlayer Player[8];
  __int16 NumberOfPlayers;
};
#pragma pack(pop)

/* 173 */
struct Shrapnel
{
  int x;
  int y;
  int z;
  char vx;
  char vy;
  char vz;
  unsigned __int8 yaw;
  unsigned __int8 pitch;
  char vyaw;
  char vpitch;
  unsigned __int8 type;
  unsigned __int16 PointOffset;
  unsigned __int16 child;
};

/* 174 */
struct Phwoar
{
  int x;
  int y;
  int z;
  char vx;
  char vy;
  char vz;
  unsigned __int8 type;
  unsigned __int8 rabbit;
  unsigned __int8 gestation;
  char die;
  unsigned __int8 vf;
  unsigned __int16 f;
  unsigned __int16 PointOffset;
  unsigned __int16 child;
  unsigned __int8 fc;
  unsigned __int8 shit;
};

/* 175 */
#pragma pack(push, 1)
struct __attribute__((packed)) __attribute__((aligned(1))) EnginePoint
{
  int pp_X;
  int pp_Y;
  int pp_U;
  int pp_V;
  int pp_S;
  int X3d;
  int Y3d;
  int Z3d;
  int DistSqr;
  __int16 EPUnkn24;
  char Flags;
};
#pragma pack(pop)

/* 176 */
#pragma pack(push, 1)
struct __attribute__((packed)) __attribute__((aligned(1))) TbIPXPlayerHeader
{
  char Magic[2];
  __int16 field_2;
  char field_4[8];
  char field_C[16];
  char field_1C[4];
  __int16 field_20;
  char field_22[4];
  int field_26;
  char field_2A;
  char field_2B;
  char field_2C;
};
#pragma pack(pop)

/* 177 */
enum NetworkServiceType : __int16
{
  NetSvc_NONE = 0x0,
  NetSvc_IPX = 0x1,
  NetSvc_COM1 = 0x2,
  NetSvc_COM2 = 0x3,
  NetSvc_COM3 = 0x4,
  NetSvc_COM4 = 0x5,
  NetSvc_Unkn6 = 0x6,
};

/* 178 */
struct Frame
{
  unsigned __int16 FirstElement;
  unsigned __int8 SWidth;
  unsigned __int8 SHeight;
  unsigned __int8 FX;
  unsigned __int8 Flags;
  unsigned __int16 Next;
};

/* 179 */
struct M31
{
  int R[3];
};

/* 180 */
enum GameKeys
{
  GKey_UNKN0 = 0x0,
  GKey_FIRE = 0x1,
  GKey_CHANGE_MD_WP = 0x2,
  GKey_VIEW_SPIN_L = 0x3,
  GKey_VIEW_SPIN_R = 0x4,
  GKey_CHANGE_AGENT = 0x5,
  GKey_GOTO_POINT = 0x6,
  GKey_GROUP = 0x7,
  GKey_UP = 0x8,
  GKey_DOWN = 0x9,
  GKey_LEFT = 0xA,
  GKey_RIGHT = 0xB,
  GKey_ZOOM_IN = 0xC,
  GKey_ZOOM_OUT = 0xD,
  GKey_SELF_DESTRUCT = 0xE,
  GKey_DROP_WEAPON = 0xF,
  GKey_VIEW_TILT_U = 0x10,
  GKey_VIEW_TILT_D = 0x11,
  GKey_PAUSE = 0x12,
  GKey_KEY_CONTROL = 0x13,
  GKey_SEL_AGENT_1 = 0x14,
  GKey_SEL_AGENT_2 = 0x15,
  GKey_SEL_AGENT_3 = 0x16,
  GKey_SEL_AGENT_4 = 0x17,
};

/* 181 */
enum PersonCommandType
{
  PCmd_NONE = 0x0,
  PCmd_STAY = 0x1,
  PCmd_GO_TO_POINT = 0x2,
  PCmd_GO_TO_PERSON = 0x3,
  PCmd_KILL_PERSON = 0x4,
  PCmd_KILL_MEM_GROUP = 0x5,
  PCmd_KILL_ALL_GROUP = 0x6,
  PCmd_PERSUADE_PERSON = 0x7,
  PCmd_PERSUADE_MEM_GROUP = 0x8,
  PCmd_PERSUADE_ALL_GROUP = 0x9,
  PCmd_BLOCK_PERSON = 0xA,
  PCmd_SCARE_PERSON = 0xB,
  PCmd_FOLLOW_PERSON = 0xC,
  PCmd_SUPPORT_PERSON = 0xD,
  PCmd_PROTECT_PERSON = 0xE,
  PCmd_HIDE = 0xF,
  PCmd_GET_ITEM = 0x10,
  PCmd_USE_WEAPON = 0x11,
  PCmd_DROP_SPEC_ITEM = 0x12,
  PCmd_AVOID_PERSON = 0x13,
  PCmd_WAND_AVOID_GROUP = 0x14,
  PCmd_DESTROY_BUILDING = 0x15,
  PCmd_UNKN16 = 0x16,
  PCmd_USE_VEHICLE = 0x17,
  PCmd_EXIT_VEHICLE = 0x18,
  PCmd_CATCH_TRAIN = 0x19,
  PCmd_OPEN_DOME = 0x1A,
  PCmd_CLOSE_DOME = 0x1B,
  PCmd_DROP_WEAPON = 0x1C,
  PCmd_CATCH_FERRY = 0x1D,
  PCmd_EXIT_FERRY = 0x1E,
  PCmd_PING_EXIST = 0x1F,
  PCmd_GOTOPOINT_FACE = 0x20,
  PCmd_SELF_DESTRUCT = 0x21,
  PCmd_PROTECT_MEM_G = 0x22,
  PCmd_RUN_TO_POINT = 0x23,
  PCmd_KILL_EVERYONE = 0x24,
  PCmd_GUARD_OFF = 0x25,
  PCmd_EXECUTE_COMS = 0x26,
  PCmd_UNKN27 = 0x27,
  PCmd_UNKN28 = 0x28,
  PCmd_UNKN29 = 0x29,
  PCmd_UNKN2A = 0x2A,
  PCmd_UNKN2B = 0x2B,
  PCmd_UNKN2C = 0x2C,
  PCmd_UNKN2D = 0x2D,
  PCmd_UNKN2E = 0x2E,
  PCmd_UNKN2F = 0x2F,
  PCmd_UNKN30 = 0x30,
  PCmd_UNKN31 = 0x31,
  PCmd_UNKN32 = 0x32,
  PCmd_WAIT_P_V_DEAD = 0x33,
  PCmd_WAIT_MEM_G_DEAD = 0x34,
  PCmd_WAIT_ALL_G_DEAD = 0x35,
  PCmd_WAIT_P_V_I_NEAR = 0x36,
  PCmd_WAIT_MEM_G_NEAR = 0x37,
  PCmd_WAIT_ALL_G_NEAR = 0x38,
  PCmd_WAIT_P_V_I_ARRIVE = 0x39,
  PCmd_WAIT_MEM_G_ARRIVE = 0x3A,
  PCmd_WAIT_ALL_G_ARRIVE = 0x3B,
  PCmd_WAIT_P_PERSUADE = 0x3C,
  PCmd_WAIT_MEM_G_PERSUADE = 0x3D,
  PCmd_WAIT_ALL_G_PERSUADE = 0x3E,
  PCmd_WAIT_MISSION_SUCC = 0x3F,
  PCmd_WAIT_MISSION_FAIL = 0x40,
  PCmd_WAIT_MISSION_START = 0x41,
  PCmd_WAIT_OBJECT_DESTROY = 0x42,
  PCmd_WAIT_TIME = 0x43,
  PCmd_UNKN44 = 0x44,
  PCmd_UNKN45 = 0x45,
  PCmd_UNKN46 = 0x46,
  PCmd_WAND_P_V_DEAD = 0x47,
  PCmd_WAND_MEM_G_DEAD = 0x48,
  PCmd_WAND_ALL_G_DEAD = 0x49,
  PCmd_WAND_P_V_I_NEAR = 0x4A,
  PCmd_WAND_MEM_G_NEAR = 0x4B,
  PCmd_WAND_ALL_G_NEAR = 0x4C,
  PCmd_WAND_P_V_I_ARRIVE = 0x4D,
  PCmd_WAND_MEM_G_ARRIVE = 0x4E,
  PCmd_WAND_ALL_G_ARRIVE = 0x4F,
  PCmd_WAND_P_PERSUADE = 0x50,
  PCmd_WAND_MEM_G_PERSUADE = 0x51,
  PCmd_WAND_ALL_G_PERSUADE = 0x52,
  PCmd_WAND_MISSION_SUCC = 0x53,
  PCmd_WAND_MISSION_FAIL = 0x54,
  PCmd_WAND_MISSION_START = 0x55,
  PCmd_UNTIL_OBJT_DESTROY = 0x56,
  PCmd_WAND_TIME = 0x57,
  PCmd_UNKN58 = 0x58,
  PCmd_UNKN59 = 0x59,
  PCmd_UNKN5A = 0x5A,
  PCmd_UNKN5B = 0x5B,
  PCmd_UNKN5C = 0x5C,
  PCmd_UNKN5D = 0x5D,
  PCmd_UNKN5E = 0x5E,
  PCmd_UNKN5F = 0x5F,
  PCmd_UNKN60 = 0x60,
  PCmd_UNKN61 = 0x61,
  PCmd_UNKN62 = 0x62,
  PCmd_UNKN63 = 0x63,
  PCmd_UNKN64 = 0x64,
  PCmd_UNKN65 = 0x65,
  PCmd_UNKN66 = 0x66,
  PCmd_UNKN67 = 0x67,
  PCmd_ADD_STATIC = 0x68,
  PCmd_WAIT_TIME2 = 0x69,
  PCmd_UNKN6A = 0x6A,
  PCmd_UNKN6B = 0x6B,
  PCmd_UNKN6C = 0x6C,
  PCmd_UNKN6D = 0x6D,
  PCmd_LOOP_COM = 0x6E,
  PCmd_UNTIL_P_V_DEAD = 0x6F,
  PCmd_UNTIL_MEM_G_DEAD = 0x70,
  PCmd_UNTIL_ALL_G_DEAD = 0x71,
  PCmd_UNTIL_P_V_I_NEAR = 0x72,
  PCmd_UNTIL_MEM_G_NEAR = 0x73,
  PCmd_UNTIL_ALL_G_NEAR = 0x74,
  PCmd_UNTIL_P_V_I_ARRIVE = 0x75,
  PCmd_UNTIL_MEM_G_ARRIVE = 0x76,
  PCmd_UNTIL_ALL_G_ARRIVE = 0x77,
  PCmd_UNTIL_P_PERSUADE = 0x78,
  PCmd_UNTIL_MEM_G_PERSUADE = 0x79,
  PCmd_UNTIL_ALL_G_PERSUADE = 0x7A,
  PCmd_UNTIL_MISSION_SUCC = 0x7B,
  PCmd_UNTIL_MISSION_FAIL = 0x7C,
  PCmd_UNTIL_MISSION_START = 0x7D,
  PCmd_UNTIL_OBJECT_DESTROYED = 0x7E,
  PCmd_UNTIL_TIME = 0x7F,
  PCmd_WAIT_OBJV = 0x80,
  PCmd_WAND_OBJV = 0x81,
  PCmd_UNTIL_OBJV = 0x82,
  PCmd_WITHIN_AREA = 0x83,
  PCmd_WITHIN_OFF = 0x84,
  PCmd_LOCK_BUILDN = 0x85,
  PCmd_UNLOCK_BUILDN = 0x86,
  PCmd_SELECT_WEAPON = 0x87,
  PCmd_HARD_AS_AGENT = 0x88,
  PCmd_UNTIL_G_NOT_SEEN = 0x89,
  PCmd_START_DANGER_MUSIC = 0x8A,
  PCmd_PING_P_V = 0x8B,
  PCmd_CAMERA_TRACK = 0x8C,
  PCmd_UNTRUCE_GROUP = 0x8D,
  PCmd_PLAY_SAMPLE = 0x8E,
  PCmd_IGNORE_ENEMIES = 0x8F,
  PCmd_FULL_STAMINA = 0x90,
  PCmd_CAMERA_ROTATE = 0x91,
};

/* 182 */
struct BulStart
{
  char OffsetX;
  char OffsetY;
};

/* 183 */
enum PacketActions
{
  PAct_NONE = 0x0,
  PAct_1 = 0x1,
  PAct_MISSN_ABORT = 0x2,
  PAct_3 = 0x3,
  PAct_4 = 0x4,
  PAct_5 = 0x5,
  PAct_6 = 0x6,
  PAct_7 = 0x7,
  PAct_8 = 0x8,
  PAct_9 = 0x9,
  PAct_A = 0xA,
  PAct_AGENT_GOTO_GND_PT_ABS = 0xB,
  PAct_AGENT_GOTO_GND_PT_REL = 0xC,
  PAct_SELECT_NEXT_WEAPON = 0xD,
  PAct_DROP_SELC_WEAPON_SECR = 0xE,
  PAct_F = 0xF,
  PAct_PICKUP = 0x10,
  PAct_11 = 0x11,
  PAct_12 = 0x12,
  PAct_13 = 0x13,
  PAct_ENTER_VEHICLE = 0x14,
  PAct_LEAVE_VEHICLE = 0x15,
  PAct_16 = 0x16,
  PAct_SELECT_AGENT = 0x17,
  PAct_18 = 0x18,
  PAct_AGENT_GOTO_GND_PT_REL_FF = 0x19,
  PAct_SHOOT_AT_GND_POINT = 0x1A,
  PAct_SELECT_PREV_WEAPON = 0x1B,
  PAct_PROTECT_INC = 0x1C,
  PAct_PROTECT_TOGGLE = 0x1D,
  PAct_SHOOT_AT_THING = 0x1E,
  PAct_GET_ITEM = 0x1F,
  PAct_PLANT_MINE_AT_GND_PT = 0x20,
  PAct_SELECT_SPECIFIC_WEAPON = 0x21,
  PAct_DROP_HELD_WEAPON_SECR = 0x22,
  PAct_AGENT_SET_MOOD = 0x23,
  PAct_GO_ENTER_VEHICLE = 0x24,
  PAct_FOLLOW_PERSON = 0x25,
  PAct_CONTROL_MODE = 0x26,
  PAct_AGENT_GOTO_FACE_PT_ABS = 0x27,
  PAct_AGENT_GOTO_GND_PT_ABS_FF = 0x28,
  PAct_29 = 0x29,
  PAct_AGENT_GOTO_FACE_PT_ABS_FF = 0x2A,
  PAct_GO_ENTER_VEHICLE_FF = 0x2B,
  PAct_GET_ITEM_FAST = 0x2C,
  PAct_SHIELD_TOGGLE = 0x2D,
  PAct_PLANT_MINE_AT_GND_PT_FF = 0x2E,
  PAct_SHOOT_AT_GND_POINT_FF = 0x2F,
  PAct_PEEPS_SCATTER = 0x30,
  PAct_SELECT_GRP_SPEC_WEAPON = 0x31,
  PAct_AGENT_USE_MEDIKIT = 0x32,
  PAct_33 = 0x33,
  PAct_GROUP_SET_MOOD = 0x34,
  PAct_AGENT_UNKGROUP_PROT = 0x35,
  PAct_AGENT_UNKGROUP_ADD = 0x36,
  PAct_CHAT_MESSAGE_KEY = 0x37,
  PAct_SHOOT_AT_FACE_POINT = 0x38,
  PAct_SHOOT_AT_FACE_POINT_FF = 0x39,
  PAct_PLANT_MINE_AT_FACE_PT = 0x3A,
  PAct_PLANT_MINE_AT_FACE_PT_FF = 0x3B,
  PAct_3C = 0x3C,
  PAct_3D = 0x3D,
  PAct_3E = 0x3E,
  PAct_3F = 0x3F,
  PAct_40 = 0x40,
  PAct_AGENT_SELF_DESTRUCT = 0xFF,
};

/* 184 */
enum KeyCodeShift
{
  KMod_SHIFT = 0x1,
  KMod_CONTROL = 0x2,
  KMod_ALT = 0x4,
};

/* 185 */
enum VehicleState
{
  VehSt_UNKN_0 = 0x0,
  VehSt_UNKN_1 = 0x1,
  VehSt_UNKN_2 = 0x2,
  VehSt_UNKN_3 = 0x3,
  VehSt_UNKN_4 = 0x4,
  VehSt_UNKN_5 = 0x5,
  VehSt_UNKN_6 = 0x6,
  VehSt_UNKN_7 = 0x7,
  VehSt_UNKN_8 = 0x8,
  VehSt_UNKN_9 = 0x9,
  VehSt_UNKN_A = 0xA,
  VehSt_UNKN_B = 0xB,
  VehSt_UNKN_C = 0xC,
  VehSt_UNKN_D = 0xD,
  VehSt_UNKN_E = 0xE,
  VehSt_UNKN_F = 0xF,
  VehSt_UNKN_10 = 0x10,
  VehSt_WANDER = 0x11,
  VehSt_UNKN_12 = 0x12,
  VehSt_UNKN_13 = 0x13,
  VehSt_UNKN_14 = 0x14,
  VehSt_UNKN_15 = 0x15,
  VehSt_UNKN_16 = 0x16,
  VehSt_UNKN_17 = 0x17,
  VehSt_UNKN_18 = 0x18,
  VehSt_UNKN_19 = 0x19,
  VehSt_UNKN_1A = 0x1A,
  VehSt_UNKN_1B = 0x1B,
  VehSt_UNKN_1C = 0x1C,
  VehSt_UNKN_1D = 0x1D,
  VehSt_UNKN_1E = 0x1E,
  VehSt_UNKN_1F = 0x1F,
  VehSt_UNKN_20 = 0x20,
  VehSt_PARKED_PARAL = 0x21,
  VehSt_UNKN_22 = 0x22,
  VehSt_UNKN_23 = 0x23,
  VehSt_UNKN_24 = 0x24,
  VehSt_UNKN_25 = 0x25,
  VehSt_UNKN_26 = 0x26,
  VehSt_UNKN_27 = 0x27,
  VehSt_UNKN_28 = 0x28,
  VehSt_UNKN_29 = 0x29,
  VehSt_UNKN_2A = 0x2A,
  VehSt_UNKN_2B = 0x2B,
  VehSt_UNKN_2C = 0x2C,
  VehSt_UNKN_2D = 0x2D,
  VehSt_UNKN_2E = 0x2E,
  VehSt_UNKN_2F = 0x2F,
  VehSt_UNKN_30 = 0x30,
  VehSt_UNKN_31 = 0x31,
  VehSt_UNKN_32 = 0x32,
  VehSt_UNKN_33 = 0x33,
  VehSt_UNKN_34 = 0x34,
  VehSt_UNKN_35 = 0x35,
  VehSt_UNKN_36 = 0x36,
  VehSt_UNKN_37 = 0x37,
  VehSt_UNKN_38 = 0x38,
  VehSt_UNKN_39 = 0x39,
  VehSt_UNKN_3A = 0x3A,
  VehSt_FLY_LANDING = 0x3B,
  VehSt_UNKN_3C = 0x3C,
  VehSt_PARKED_PERPN = 0x3D,
  VehSt_UNKN_3E = 0x3E,
  VehSt_UNKN_3F = 0x3F,
  VehSt_UNKN_40 = 0x40,
  VehSt_UNKN_41 = 0x41,
  VehSt_UNKN_42 = 0x42,
  VehSt_UNKN_43 = 0x43,
  VehSt_UNKN_44 = 0x44,
  VehSt_UNKN_45 = 0x45,
  VehSt_UNKN_46 = 0x46,
  VehSt_UNKN_47 = 0x47,
  VehSt_UNKN_48 = 0x48,
  VehSt_UNKN_49 = 0x49,
  VehSt_UNKN_4A = 0x4A,
  VehSt_UNKN_4B = 0x4B,
  VehSt_UNKN_4C = 0x4C,
  VehSt_UNKN_4D = 0x4D,
  VehSt_UNKN_4E = 0x4E,
  VehSt_UNKN_4F = 0x4F,
  VehSt_UNKN_50 = 0x50,
  VehSt_UNKN_51 = 0x51,
  VehSt_UNKN_52 = 0x52,
};

/* 186 */
enum FLI_Ani_Consts
{
  FLI_COLOUR256 = 0x4,
  FLI_SS2 = 0x7,
  FLI_COLOUR = 0xB,
  FLI_LC = 0xC,
  FLI_BLACK = 0xD,
  FLI_BRUN = 0xF,
  FLI_COPY = 0x10,
  FLI_PSTAMP = 0x12,
  FLI_FILE_HEADER = 0xAF12,
  FLI_PREFIX_CHUNK = 0xF100,
  FLI_FRAME_CHUNK = 0xF1FA,
};

/* 187 */
struct LevelDef
{
  unsigned __int8 PlayableGroups[8];
  char field_8[33];
  char field_29;
  char field_2A;
  char field_2B;
};

/* 188 */
struct mouse_buffer
{
  int Valid;
  int Width;
  int Height;
  unsigned int Offset;
  unsigned __int8 Buffer[4096];
  int X;
  int Y;
  int XOffset;
  int YOffset;
};

/* 189 */
struct mouse_info
{
  int XMoveRatio;
  int YMoveRatio;
  int XSpriteOffset;
  int YSpriteOffset;
  unsigned __int8 Sprite[4096];
};

/* 190 */
struct DisplayStruct
{
  unsigned __int8 *PhysicalScreen;
  unsigned __int8 *WScreen;
  unsigned __int8 *GlassMap;
  unsigned __int8 *FadeTable;
  unsigned __int8 *GraphicsWindowPtr;
  const struct TbSprite *MouseSprite;
  int PhysicalScreenWidth;
  int PhysicalScreenHeight;
  int GraphicsScreenWidth;
  int GraphicsScreenHeight;
  int GraphicsWindowX;
  int GraphicsWindowY;
  int GraphicsWindowWidth;
  int GraphicsWindowHeight;
  int MouseWindowX;
  int MouseWindowY;
  int MouseWindowWidth;
  int MouseWindowHeight;
  int MouseX;
  int MouseY;
  int MMouseX;
  int MMouseY;
  int RMouseX;
  int RMouseY;
  unsigned __int16 DrawFlags;
  unsigned __int16 OldVideoMode;
  unsigned __int16 ScreenMode;
  unsigned __int8 VesaIsSetUp;
  unsigned __int8 LeftButton;
  unsigned __int8 RightButton;
  unsigned __int8 MiddleButton;
  unsigned __int8 MLeftButton;
  unsigned __int8 MRightButton;
  unsigned __int8 MMiddleButton;
  unsigned __int8 RLeftButton;
  unsigned __int8 RMiddleButton;
  unsigned __int8 RRightButton;
  unsigned __int8 FadeStep;
  unsigned __int8 DrawColour;
  unsigned __int8 *Palette;
};

/* 191 */
struct ScreenModeInfo
{
  unsigned __int16 Width;
  unsigned __int16 Height;
  unsigned __int16 BitsPerPixel;
  int Available;
  int VideoMode;
  char Desc[24];
};

/* 192 */
struct PointerHotspot
{
  char x;
  char y;
  char z;
};

/* 193 */
struct ScreenMenuBox
{
  char field_0;
  char field_1[8];
  char field_9[8];
  char field_11[2];
  char field_13[8];
  char field_1B[8];
  char field_23[2];
  char field_25;
  char field_26;
  __attribute__((packed)) __attribute__((aligned(1))) __int16 Flags;
  signed __int8 field_29;
};

/* 194 */
struct UnkBinaryObjSize
{
  void *obj_ptr;
  int obj_len;
  int obj_idx;
};

/* 195 */
struct MusicBankSizes
{
  int mbs0;
  int mbs1;
  int mbs2;
  int mbs3;
  size_t mbs4;
  size_t mbs5;
  int mbs6;
  int mbs7;
};

/* 196 */
struct MusicBankHead
{
  int field_0;
  int offset;
  int field_8;
  int field_C;
};

/* 197 */
struct AudioInitOptions
{
  char *IniPath;
  char *SoundDriverPath;
  char *SoundDataPath;
  unsigned __int16 SoundType;
  unsigned __int16 AbleFlags;
  __int16 SelectedWin95MidiDevice;
  __int16 SelectedWin95WaveDevice;
  unsigned __int8 MaxSamples;
  unsigned __int8 StereoOption;
  unsigned __int8 AutoScan;
  unsigned __int8 DisableDangerMusic;
  unsigned __int8 DisableLoadSounds;
  unsigned __int8 DisableLoadMusic;
  unsigned __int8 UseCurrentAwe32Soundfont;
  unsigned __int8 UseMultiMediaExtensions;
  unsigned __int8 InitStreamedSound;
  unsigned __int8 InitRedbookAudio;
};

/* 199 */
struct SNDCARD_IO_PARMS
{
  __int16 IO;
  __int16 IRQ;
  __int16 DMA_8_bit;
  __int16 DMA_16_bit;
  int IO_reserved[4];
};

/* 198 */
struct AIL_INI
{
  char device_name[128];
  char driver_name[128];
  struct SNDCARD_IO_PARMS IO;
};

/* 200 */
typedef __iobuf FILE;

/* 201 */
#pragma pack(push, 1)
struct __iobuf
{
  unsigned __int8 *_ptr;
  int _cnt;
  unsigned __int8 *_base;
  unsigned int _flag;
  int _handle;
  unsigned int _bufsize;
  unsigned __int8 _ungotten;
  unsigned __int8 _tmpfchar;
};
#pragma pack(pop)

/* 203 */
struct BfMusicInfo
{
  int a1;
  int a4;
  int a8;
  int a12;
  __int16 a16;
  __attribute__((packed)) __attribute__((aligned(1))) int a18;
  __int16 a22;
  int a24;
  int a28;
};

/* 204 */
#pragma pack(push, 1)
struct WarFlag
{
  unsigned __int32 KillOnSight;
  unsigned __int32 KillIfWeaponOut;
  unsigned __int32 KillIfArmed;
  unsigned __int32 Truce;
  char Guardians[8];
  int ugfld_24;
  int ugfld_28;
  int ugfld_32;
  int ugfld_36;
};
#pragma pack(pop)

/* 205 */
enum SubTypeBuilding
{
  SubTT_BLD_NONE = 0x0,
  SubTT_BLD_1 = 0x1,
  SubTT_BLD_2 = 0x2,
  SubTT_BLD_3 = 0x3,
  SubTT_BLD_4 = 0x4,
  SubTT_BLD_5 = 0x5,
  SubTT_BLD_6 = 0x6,
  SubTT_BLD_7 = 0x7,
  SubTT_BLD_8 = 0x8,
  SubTT_BLD_9 = 0x9,
  SubTT_BLD_A = 0xA,
  SubTT_BLD_B = 0xB,
  SubTT_BLD_C = 0xC,
  SubTT_BLD_D = 0xD,
  SubTT_BLD_E = 0xE,
  SubTT_BLD_F = 0xF,
  SubTT_BLD_10 = 0x10,
  SubTT_BLD_11 = 0x11,
  SubTT_BLD_12 = 0x12,
  SubTT_BLD_13 = 0x13,
  SubTT_BLD_SHUTLDR = 0x14,
  SubTT_BLD_15 = 0x15,
  SubTT_BLD_16 = 0x16,
  SubTT_BLD_17 = 0x17,
  SubTT_BLD_DOME = 0x18,
  SubTT_BLD_19 = 0x19,
  SubTT_BLD_1A = 0x1A,
  SubTT_BLD_1B = 0x1B,
  SubTT_BLD_1C = 0x1C,
  SubTT_BLD_1D = 0x1D,
  SubTT_BLD_1E = 0x1E,
  SubTT_BLD_1F = 0x1F,
  SubTT_BLD_MGUN = 0x20,
  SubTT_BLD_21 = 0x21,
  SubTT_BLD_22 = 0x22,
  SubTT_BLD_23 = 0x23,
  SubTT_BLD_24 = 0x24,
  SubTT_BLD_GATE = 0x25,
  SubTT_BLD_26 = 0x26,
  SubTT_BLD_27 = 0x27,
  SubTT_BLD_28 = 0x28,
  SubTT_BLD_29 = 0x29,
  SubTT_BLD_2A = 0x2A,
  SubTT_BLD_2B = 0x2B,
  SubTT_BLD_2C = 0x2C,
  SubTT_BLD_2D = 0x2D,
  SubTT_BLD_2E = 0x2E,
  SubTT_BLD_STATION = 0x2F,
  SubTT_BLD_30 = 0x30,
  SubTT_BLD_31 = 0x31,
  SubTT_BLD_32 = 0x32,
  SubTT_BLD_33 = 0x33,
  SubTT_BLD_34 = 0x34,
  SubTT_BLD_35 = 0x35,
  SubTT_BLD_WIND_ROTOR = 0x36,
  SubTT_BLD_37 = 0x37,
  SubTT_BLD_38 = 0x38,
  SubTT_BLD_39 = 0x39,
  SubTT_BLD_3A = 0x3A,
  SubTT_BLD_3B = 0x3B,
  SubTT_BLD_3C = 0x3C,
  SubTT_BLD_BILLBOARD = 0x3D,
  SubTT_BLD_3E = 0x3E,
  SubTT_BLD_3F = 0x3F,
  SubTT_BLD_40 = 0x40,
  SubTT_BLD_41 = 0x41,
  SubTT_BLD_42 = 0x42,
  SubTT_BLD_43 = 0x43,
  SubTT_BLD_44 = 0x44,
};

/* 211 */
#pragma pack(push, 1)
struct NetPlayer2
{
  char field_0[13];
  char field_D;
  char field_E[10];
  char field_18;
};
#pragma pack(pop)

/* 227 */
#pragma pack(push, 1)
struct TbIPXPlayerData
{
  char field_2D[26];
  __int16 field_47[99];
  char num_players;
  char field_10E;
};
#pragma pack(pop)

/* 214 */
#pragma pack(push, 1)
struct TbIPXPlayer
{
  struct TbIPXPlayerHeader Header;
  struct TbIPXPlayerData Data;
};
#pragma pack(pop)

/* 235 */
#pragma pack(push, 1)
struct TbIPXPlayerEx
{
  struct TbIPXPlayer P;
  char field_10F[268];
  char field_21B;
};
#pragma pack(pop)

/* 212 */
#pragma pack(push, 1)
struct TbIPXHandler
{
  __int16 InterruptNo;
  __int16 field_2;
  __int16 PlayerDataSize;
  __int16 field_6;
  __int16 field_8;
  char SessionActive;
  char field_B;
  char field_C;
  char field_D;
  char field_E[4];
  char field_12[24];
  int field_2A;
  char field_2E[4];
  __int16 field_32;
  char field_34[16];
  __int16 field_44;
  char field_46[30];
  struct TbIPXPlayerEx PlayerData[30];
};
#pragma pack(pop)

/* 215 */
#pragma pack(push, 1)
struct __attribute__((packed)) __attribute__((aligned(1))) sound_timer_inf
{
  int handle;
  char used;
};
#pragma pack(pop)

/* 217 */
#pragma pack(push, 1)
struct WORDREGS
{
  unsigned __int16 ax;
  unsigned __int16 _1;
  unsigned __int16 bx;
  unsigned __int16 _2;
  unsigned __int16 cx;
  unsigned __int16 _3;
  unsigned __int16 dx;
  unsigned __int16 _4;
  unsigned __int16 si;
  unsigned __int16 _5;
  unsigned __int16 di;
  unsigned __int16 _6;
  unsigned int cflag;
};
#pragma pack(pop)

/* 218 */
#pragma pack(push, 1)
struct BYTEREGS
{
  unsigned __int8 al;
  unsigned __int8 ah;
  unsigned __int8 bl;
  unsigned __int8 bh;
  unsigned __int8 cl;
  unsigned __int8 ch;
  unsigned __int8 dl;
  unsigned __int8 dh;
};
#pragma pack(pop)

/* 216 */
#pragma pack(push, 1)
union REGS
{
  WORDREGS x;
  WORDREGS w;
  BYTEREGS h;
};
#pragma pack(pop)

/* 219 */
#pragma pack(push, 1)
struct SREGS
{
  unsigned __int16 es;
  unsigned __int16 cs;
  unsigned __int16 ss;
  unsigned __int16 ds;
};
#pragma pack(pop)

/* 225 */
#pragma pack(push, 1)
struct __attribute__((packed)) __attribute__((aligned(1))) IPXSession
{
  __int16 field_0;
  __int16 GameId;
  char Name[8];
  char Reserved[31];
  char HostPlayerNumber;
  char field_2C;
};
#pragma pack(pop)

/* 226 */
#pragma pack(push, 1)
struct IPXPlayer
{
  int Res0;
  int Res4;
  __int16 Res8;
  char Name[16];
  __int16 Used;
};
#pragma pack(pop)

/* 224 */
#pragma pack(push, 1)
struct IPXSessionList
{
  IPXSession Session;
  IPXPlayer Player[8];
  char NumberOfPlayers;
  char field_105;
};
#pragma pack(pop)

/* 228 */
#pragma pack(push, 1)
struct SNDSEQUENCE
{
  int driver;
  int status;
  int TIMB;
  int RBRN;
  int EVNT;
  int EVNT_ptr;
  int ICA;
  int prefix_callback;
  int trigger_callback;
  int beat_callback;
  int EOS;
  int loop_count;
  int interval_count;
  int interval_num;
  int volume;
  int volume_target;
  int volume_accum;
  int volume_period;
  int tempo_percent;
  int tempo_target;
  int tempo_accum;
  int tempo_period;
  int tempo_error;
  int beat_count;
  int measure_count;
  int time_numerator;
  int time_fraction;
  int beat_fraction;
  int time_per_beat;
  int FOR_ptrs[4];
  int FOR_loop_count[4];
  int chan_map[16];
  char shadow[1152];
  int note_count;
  int note_chan[32];
  int note_num[32];
  int note_time[32];
  int user_data[8];
  int system_data[8];
};
#pragma pack(pop)

/* 230 */
#pragma pack(push, 1)
struct BfSoundBankHead
{
  int TabPos;
  int DatPos;
  int TabSize;
  int DatSize;
};
#pragma pack(pop)

/* 231 */
#pragma pack(push, 1)
struct SpwRawData
{
  __int16 tx;
  __int16 ty;
  __int16 tz;
  __int16 rz;
  __int16 ry;
  __int16 rrz;
  __int16 buttons_new;
  __int16 buttons_cur;
  __int16 buttons_old;
  __int16 newData;
  char field_14[8];
  __int16 field_1C;
  __int16 anx;
  __int16 any;
  __int16 anz;
  __int16 anr;
  __int16 anu;
  __int16 anv;
  __int16 field_2A;
  int field_2C;
  int field_30;
  int butn;
  int field_38;
  int field_3C;
  char field_40[76];
  int field_8C;
};
#pragma pack(pop)

/* 232 */
#pragma pack(push, 1)
struct TbJoyHandler
{
  __int16 InterruptNo;
  __int16 field_2;
  char field_4[128];
  struct DevInput Input;
};
#pragma pack(pop)

/* 233 */
#pragma pack(push, 1)
struct ScreenPoint
{
  __int16 X;
  __int16 Y;
};
#pragma pack(pop)

/* 234 */
#pragma pack(push, 1)
struct ScreenShape
{
  __int16 PtX[9];
  __int16 PtY[9];
  char field_24;
  char Timer;
  __int16 Flags;
  unsigned __int8 Colour;
  unsigned __int8 BGColour;
};
#pragma pack(pop)

/* 236 */
#pragma pack(push, 1)
struct BfSfxInfo
{
  char FileName[12];
  int sffld_12;
  __int16 sffld_16;
  int DataBeg;
  int sffld_22;
  int DataEnd;
  __int16 sffld_30;
};
#pragma pack(pop)

/* 237 */
#pragma pack(push, 1)
struct BezierPt
{
  char field_0[26];
  __int16 field_1A;
};
#pragma pack(pop)

/* 238 */
#pragma pack(push, 1)
struct AnimPage
{
  unsigned __int8 PageNo;
  unsigned __int8 X;
  unsigned __int8 Y;
  unsigned __int8 Width;
  unsigned __int8 Height;
  unsigned __int8 No;
  char field_6[4];
};
#pragma pack(pop)

/* 239 */
#pragma pack(push, 1)
struct GateCombo
{
  unsigned __int16 ObjCount;
  __int16 X[10];
  __int16 Y[10];
  __int16 Z[10];
  __int16 Obj[10];
  __int16 AngleY[10];
};
#pragma pack(pop)

/* 240 */
#pragma pack(push, 1)
struct __attribute__((packed)) __attribute__((aligned(1))) ShEnginePoint
{
  __int16 X;
  __int16 Y;
  int Depth;
  unsigned __int8 Flags;
  __int16 ReflShade;
  __int16 Shade;
};
#pragma pack(pop)

/* 241 */
#pragma pack(push, 1)
struct __attribute__((packed)) __attribute__((aligned(2))) SF_INFO
{
  __int16 no_sample_packets;
  int sample_seek;
  int preset_seek;
  int preset_read_size;
};
#pragma pack(pop)

/* 242 */
#pragma pack(push, 1)
struct AILSOUNDINFO
{
  int field_0;
  int field_4;
  int field_8;
  int field_C;
  int field_10;
  int field_14;
  int field_18;
};
#pragma pack(pop)

/* 243 */
#pragma pack(push, 1)
struct Smack
{
  int Version;
  int Width;
  int Height;
  int Frames;
  int MSPerFrame;
  int SmackerType;
  int LargestInTrack[7];
  int tablesize;
  int codesize;
  int absize;
  int detailsize;
  int typesize;
  int TrackType[7];
  int extra;
  int NewPalette;
  char Palette[772];
  int PalType;
  int FrameNum;
  int FrameSize;
  int SndSize;
  int LastRectx;
  int LastRecty;
  int LastRectw;
  int LastRecth;
  int OpenFlags;
  int LeftOfs;
  int TopOfs;
  int LargestFrameSize;
  int Highest1SecRate;
  int Highest1SecFrame;
  int ReadError;
  int addr32;
  char field_3B0[84];
  struct SmackSndTrk *Unkn404PerTrack[7];
  char field_420[60];
  int field_45C;
  char field_460[24];
  char field_478[50];
  __int16 field_4AA;
};
#pragma pack(pop)

/* 244 */
#pragma pack(push, 1)
struct SmackSndTrk
{
  int field_0[5];
  int field_14;
  int field_18[7];
  struct SmackSndTrk *next;
  struct SNDSAMPLE *smp;
  int field_3C;
  int field_40;
  int field_44;
  int field_48;
  int field_4C;
  int field_50;
  void *field_54;
  int field_58;
  int field_5C[3];
  int field_68;
  int field_6C;
};
#pragma pack(pop)

/* 245 */
enum PurpleDrawType
{
  PuDT_NONE = 0x0,
  PuDT_BOX = 0x1,
  PuDT_TEXT = 0x2,
  PuDT_UNK03 = 0x3,
  PuDT_COPYBOX = 0x4,
  PuDT_SPRITE = 0x5,
  PuDT_POTRIG = 0x6,
  PuDT_FLIC = 0x7,
  PuDT_NOISEBOX = 0x8,
  PuDT_LINE = 0x9,
  PuDT_HVLINE = 0xA,
  PuDT_TRIANGLE = 0xB,
  PuDT_HOTSPOT = 0xC,
};

/* 246 */
#pragma pack(push, 1)
struct scanstr3
{
  int u1;
  int v1;
  int u2;
  int v2;
};
#pragma pack(pop)

/* 247 */
#pragma pack(push, 1)
struct FireFlame
{
  char type;
  unsigned __int8 count;
  char fvel;
  char fcount;
  char big;
  char dbig;
  char ddbig;
  unsigned __int8 life;
  unsigned __int16 frame;
  __int16 x;
  __int16 y;
  __int16 z;
  unsigned __int16 PointOffset;
  unsigned __int16 next;
};
#pragma pack(pop)

/* 248 */
#pragma pack(push, 1)
struct UnkFLight
{
  __int16 unfulgt_0;
  __int16 unfulgt_2;
  __int16 unfulgt_4;
  __int16 unfulgt_6;
  char unfulgt_8;
  char unfulgt_9;
};
#pragma pack(pop)

/* 249 */
#pragma pack(push, 1)
struct __attribute__((packed)) __attribute__((aligned(1))) UnkPlayerGroup
{
  char GroupActive;
  unsigned __int8 AgentWeapons[4];
  __int16 AgentOwners[4];
  __int16 AgentMoods[4];
};
#pragma pack(pop)

/* 251 */
#pragma pack(push, 1)
struct unkn_mech_struc7
{
  struct unkn_mech_struc3 field_0[8];
  struct unkn_mech_struc4 field_3B0[256];
  char field_7DB0[27200];
  unkn_mech_struc1 field_E7F0[1024];
  char field_12BF0[8];
  struct unkn_mech_struc2 field_12BF8[16];
};
#pragma pack(pop)

/* 252 */
#pragma pack(push, 1)
struct __attribute__((packed)) __attribute__((aligned(1))) unkn_mech_struc5
{
  int field_0;
  int field_4;
  int field_8;
  char field_C[24];
  char field_24[372];
  char field_198[16];
  char field_1A8;
};
#pragma pack(pop)

/* 253 */
#pragma pack(push, 1)
struct BATBall
{
  int X;
  int Y;
  int UnkDw2;
  int UnkDw3;
  int NextX;
  int NextY;
  int UnkDw6;
  int UnkDw7;
  struct BATBall *ListNext;
  struct BATBall **ListPvNxPtr;
};
#pragma pack(pop)

/* 254 */
#pragma pack(push, 1)
struct BATBonus
{
  int X;
  int Y;
  int UnkDw2;
  int UnkDw3;
  struct BATBonus *ListNext;
  struct BATBonus **ListPvNxPtr;
};
#pragma pack(pop)

/* 255 */
#pragma pack(push, 1)
struct UnkVFXStruct1
{
  __int16 field_0;
  __int16 field_2;
  __int16 field_4;
};
#pragma pack(pop)

/* 257 */
#pragma pack(push, 1)
struct BillboardNBreakout
{
  unsigned __int8 field_0;
  unsigned __int8 field_1;
  unsigned __int8 field_2;
  unsigned __int8 field_3;
};
#pragma pack(pop)

